FORMAT: 1A
HOST: http://ehealth.edenlabllc.com/

# eHealth API

This is a API documentation for Ukrainian Health Services government institution back-end, that should provide:

* Master Patients Index (MPI)
* Global Medical Institutions and Doctors Registries
* Partnership Relation Management (PRM) module that describes business relations between this 3 entities.

Project development is fully transparent, you can find it's source code on GitHub:

* [eHealth API and issue tracker](https://github.com/edenlabllc/ehealth.api)
* [Master Patient Index](https://github.com/edenlabllc/mpi.api)
* [Partnership Relation Management](https://github.com/edenlabllc/prm.api)

<!-- * [Reference Implementation of Hospital Information System UI](https://github.com/edenlabllc/prm.web) -->

This API design in based on [Nebo #15 API Design Manifest](http://docs.apimanifest.apiary.io/).

## Docs Structure

This document contains both internal and public (usually `/api/..`) API specifications. If you plan to use it as outside API consumer - please refer only to sections that marked as `Public`.

<!--
## Patination

We apply cursor based pagination..

## Autentification

We use three-legged oAuth authentication, RFC..
-->

## Context Switching for end-users

Since Doctor may have multiple work-places, you MUST fetch list of possible work-contexts and apply `legal_entity_id` filter on each request, where this parameter is available.

Thus you will make sure that end-user understand from which context entities are managed.

If our API returns only one work context, you are free to hide context picker.

## Contribution Guidelines

TODO.

## Submitting Issues

To submit issues you should use [Issue Tracking Repo](https://github.com/edenlabllc/ehealth.api), issues in all other repositories are used to plan backlog and non-related issued will be closed.

# Group Internal. Authorization Provider

For security purposes eHealth doesn't allow proxying passwords or to perform any sort back-end authorization. You should always redirect your customers (eg. doctors, we call them "consumers") to the Login UI.

After obtaining `access_token` all subsequent requests should be made with `Authorization: Bearer base64(access_token:)` header.

## Login UI [/oauth]

### Show Login UI [GET /oauth/ui{?client_id,redirect_url,scope,response_type}]

This method renders response login page. It's structure can differ by required scopes and security measures enabled by project (they can change).

For security purposes, we will set `X-Frame-Options: deny` header that will disallow opening this page in an iframe.

+ Parameters
    + client_id: `mis-001` (string, required) - Medical Information System ID issued upon integration request. Used to identify application developer.
    + redirect_url: http://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.
    + response_type: code (enum, required) - Response type, only `code` is supported.

+ Response 200 (text/html; charset=UTF-8)

    + Headers

            X-CSRF-Token: my-csrf-token

## oAuth Codes [/oauth/codes]

### Issues oAuth Code Grant [POST /oauth/codes]

API consumer **back-end** should use this method exchange Code Grant to Access Token.

+ Request (application/json)

    + Headers

            X-CSRF-Token: `my-csrf-token`

    + Attributes (object)
        + client_id: `mis-001` (string, required) - Medical Information System ID issued upon integration request. Used to identify application developer.
        + login: gandalf (string, required) - Consumer login.
        + password: secret (string, required) - Consumer password.
        + timestamp: 1489583714 (number, optional) - Timestamp when request was made. If timestamp was made more than 15 minutes ago, corresponding error will be returned. Required only if `signature` is present.
        + signature: signature (string, optional) - `login + bcrypt(password) + timestamp` string signed with a consumer's private key. Required for some scopes.

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + code: 299383828 (string, required) - oAuth code grant

## oAuth Tokens [/oauth/tokens]

### Exchange oAuth Code Grant to Access Token [POST]

+ Request (application/json)

    + Headers

            X-CSRF-Token: my-csrf-token

    + Attributes (object)
        + client_id: `mis-001` (string, required) - Medical Information System ID issued upon integration request. Used to identify application developer.
        + client_secret: `mis-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
        + code: 299383828 (string, required) - oAuth code grant.
        + `grant_type`: authorization_code (string, fixed) - oAuth Grant Type. Currently only `authorization_code` is supported.

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Access_Token)

### Get oAuth Access Token details [GET /oauth/tokens/{access_token}]

This method is designed to be used only by eHealth API gateway.

+ Parameters
    + access_token: `my-oauth-token` (string, required) - oAuth access token.

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Access_Token)

### Set an oAuth Access Token MSP Context [PATCH /oauth/tokens/{access_token}]

This method is designed to be used only by eHealth API gateway.

+ Parameters
    + access_token: `my-oauth-token` (string, required) - oAuth access token.

+ Request (application/json)
    + Attributes
        + msp_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Access_Token)
            + msp_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

## oAuth Invites [/oauth/invites]

### Create user invite [POST]

+ Request (application/json)
    + Attributes
        + email: email@example.com (string, required)
        + data (object)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + email: email@example.com (string, required)
            + expires_at: `2017-08-19T00:00:00.000Z` (string, required) - ISO Datetime.

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Object not found` (string)

+ Response 400 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 400 (number)
        + error (Response__Error)
            + type: USER_EXISTS (string)
            + message: `User already exists` (string)

### Confirm user invite [POST /oauth/invites/{id}/actions/approve]

+ Request (application/json)
    + Attributes
        + password: password (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + user_id: 60f523a7-c223-4b12-b5a7-b82a53bba94f (string, required)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Object not found` (string)

+ Response 400 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 400 (number)
        + error (Response__Error)
            + type: EXPIRED (string)
            + message: `User already exists` (string)

## oAuth Users [/oauth/users]

### Get User [GET /oauth/users{?id,email}]

+ Parameters
    + id: 60f523a7-c223-4b12-b5a7-b82a53bba94f (string, optional)
    + email: email@example.com (string, optional)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

### Request Password Recovery [POST /credentials_recovery_requests]

This method will send password recovery email to a User. Request from this email should be used in
[Reset User password]() method.

+ Request (application/json)
    + Attributes
        + `credentials_recovery_request` (object)
            + email (string)

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (object)
            + is_active: true (boolean)
            + expires_at: `2017-04-20T19:14:13Z` (string) - Expiration datetime in ISO 8601 format

### Reset User Password [PATCH /credentials_recovery_requests/{id}/actions/reset_password]

+ Parameters
    + id: `request-1380df72-275a-11e7-93ae-92361f002671` (string, required)

+ Request (application/json)
    + Attributes
        + user (object)
            + password: `notASecret1` (string, required) - User password. At least 6 characters.

+ Response 200 (application/json)
   + Attributes (`Response_OK`)
        + data (`User_Response`)


# Group Internal. Master Patients Index

## Persons [/persons]

### Get Patient by ID [GET /persons/{id}]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Person_Full`)


### Create or Update person [POST]

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

    + Attributes (Person_Request)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Person_Full`)


### Search for a Person [GET /api/persons{?first_name,last_name,second_name,birth_date,tax_id,phone_number,birth_place,page_number,page_size}]

This method allows to search for a Person (MPI) without disclosing personal data.

Method returns only **requested** parameters, birth place and second name in addition for manual identification on MSP side.

+ Parameters
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
    + tax_id: 3126509816 (string, optional)
    + phone_number: `+380508887700` (string, optional)
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Person_Short`])

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `too_many_results`
            + message: `This API method returns only exact match results, please retry with more specific search result` (string)

## Merge Candidates [/merge_candidates]

### Get merge candidates [GET /merge_candidates{?id,person_id,master_person_id,status,limit,starting_after,ending_before}]

+ Parameters
    + id: `8aa4d353-a58f-45f6-b5ce-a89a9cc39391` (string, optional) - Unique record identifier
    + person_id: `50320ee5-2bca-472c-a1a0-28e2e003ec2a` (string, optional) - Merge candidate identifier
    + `master_person_id`: `cb553981-4b7f-45ec-8f73-f77faf2dcb22` (string, optional) - Master person identifier
    + status: NEW (enum, optional) - Record status. Default: NEW
        - NEW
        - MERGED
    + limit: 20 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
    + starting_after: 56c31536a60ad644060041af (string, optional) - A cursor to fetch next page. Taken from collection response.
    + ending_before: 56c31536a60ad644060041aa (string, optional) - A cursor to fetch previous page. Taken from collection response.

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Merge_Candidate`])

### Merge candidate [POST /merge_candidates/{id}/actions/merge]

1. Check current candidate status (status == NEW). If status != NEW - respond with 409 (invalid status)
2. Update mpi.person is_active to false
3. Update mpi.merge_candidates record status to MERGED

+ Parameters
    + id: `8aa4d353-a58f-45f6-b5ce-a89a9cc39391` (string, optional) - Unique record identifier

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Merge_Candidate`)

# Group Internal. IL DB

### Get Declaration requests List [GET /declaration_requests{?tax_id,employee_id,legal_entity_id,status,page_number,page_size}]

Methods returns list of declaration requests by combination of patient_id, doctor_id, msp_id.

+ Parameters
    + tax_id: `3381275610` (string, optional) - MPI ID of a patient.
    + employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MPI ID of a doctor.
    + `legal_entity_id`: `A7C1ABD7-4472-42CB-9C39-3F3AB1F1F4FD` (string, optional) - MSP ID.
    + status: active (string, optional) - Declaration request current status.
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`crud_Declaration_request_get`])

### Update declaration requests [PATCH /declaration_requests/]

This method to update the declaration request status.

+ Request (application/json)
    + Attributes
        + `declaration_requests` (array[`declaration_request_patch`])
+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (array[`crud_Declaration_request_get`])

### Get Declaration documents list [GET /declarations/{id}/documents{?page_number,page_size}]
Service to get list of signed URLs with the read access for all the documents attached to the declaration request using declaration identifier

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`media_content`])

# Group Internal. OPS DB

## Declarations [/declarations]

### Create Declaration [POST]

Method to register new declaration record

+ Request (application/json)
    + Attributes (Declaration)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`crud_Declaration_get`)

### Update declaration [PATCH /declaration/{id}]

This method to update the declaration status.


+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)


+ Request (application/json)
    + Attributes (crud_Declaration_patch)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_Declaration_get`)

### Get Declaration Details by ID [GET /declarations/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_Declaration_get`)

### Get Declarations List [GET /declarations{?person_id,employee_id,legal_entity_id,division_id,status,page_number,page_size}]

Methods returns list of declarations by combination of patient_id, doctor_id, msp_id.

Response will contain only records that you have access to.

+ Parameters
    + person_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MPI ID of a patient.
    + employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MPI ID of a doctor.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + status: active (text, optional) - Search only for active or disabled declarations.
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_Collection_V2)
        + data (array[`crud_Declaration_get`])

### Terminate declarations by employee or person [POST /declarations/terminate]

1. One parameter of `employee_id` and `person_id` must be set
2. Search active declarations by `employee_id` or `person_id`
3. Update declarations status to TERMINATED

+ Request (application/json)
    + Attributes (object)
        + employee_id: `73ebee6e-b9d9-41b0-b2ad-ab7704d5306e` (string, optional)
        + person_id: `50320ee5-2bca-472c-a1a0-28e2e003ec2a` (string, optional)

+ Response 200 (application/json)
    + Attributes (Response_OK)


# Group Internal. Partner Relationship Management

## Dictionaries [/dictionaries]

### Get dictionaries [GET /dictionaries{?name}]

+ Parameters
    + name: DOCUMENT_TYPE (string, optional)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (array[`Dictionary`])

### Update dictionary [PATCH /dictionaries/{name}]

+ Parameters
    + name: DOCUMENT_TYPE (string, required)

+ Request (application/json)
    + Attributes (Dictionary)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (array[`Dictionary`])

## Party [/party]

### Create new party [POST]

Method to create new party record.

+ Request (application/json)
    + Attributes (object)
        + party(`crud_party_post`)
        + users(array)
            + (object)
                + user_id: `2de19358-0062-4f14-8a50-9dff015ed165` (string, required)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + party(`crud_party_get`)
            + users(array)
                + (object)
                    + user_id: `2de19358-0062-4f14-8a50-9dff015ed165` (string, required)


### Update party [PATCH /party/{id}]

This method to update the employee info by ID.


+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)


+ Request (application/json)
    + Attributes (object)
        + party(`crud_party_post`)
        + users(array)
            + (object)
                + user_id: `2de19358-0062-4f14-8a50-9dff015ed165` (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + party(`crud_party_get`)
            + users(array)
                + (object)
                    + user_id: `2de19358-0062-4f14-8a50-9dff015ed165` (string, required)


### Search for party [GET /party{?first_name,last_name,second_name,birth_date,tax_id,phone_number,page_number,page_size}]

Methods returns list of parties.

+ Parameters
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
    + tax_id: 3126509816 (string, optional)
    + phone_number: `+380508887700` (string, optional)
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + party(`crud_party_get`)
                + users(array)
                    + (object)
                        + user_id: `2de19358-0062-4f14-8a50-9dff015ed165` (string, required)
                

### Get party details [GET /party/{id}]

Methods returns party details by ID.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + party(`crud_party_get`)
            + users(array)
                + (object)
                    + user_id: `2de19358-0062-4f14-8a50-9dff015ed165` (string, required)


## Employees [/employees]

### Create new employee [POST]

Method to create new employee record for the MSP.


+ Request (application/json)
    + Attributes (crud_employee_post)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (crud_employee_get)

### Update employee [PUT /employees/{id}]

This method to update the employee info by ID.


+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)


+ Request (application/json)
    + Attributes (crud_employee_post)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (crud_employee_get)


### Search for an Employee [GET /employees{?party_id,legal_entity_id,division_id,employee_type,status,page_number,page_size}]

Methods returns list of employees.

+ Parameters
    + `party_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - user_id of a doctor.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - division ID.    
    + `employee_type`: DOCTOR (string) - `Dictionary: EMPLOYEE_TYPE`
    + status: APPROVED (enum)
        - NEW
        - APPROVED
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[crud_employee_get])

### Get Employee details [GET /employees/{id}]

Methods returns employee details by ID.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_employee_get`)

### Get Employee Request by ID [GET /employee_requests/{id}]

This service should be used for internal services/processes. Used without `access_token`

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) 


+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Employee_Request_Details)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
        + urgent (object, optional)
            + user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)


### Update Employee Request Status [PATCH /employee_requests/{id}]
This service should be used for update employee request status on REJECTED or APPROVED.

Available transitions:
NEW --> REJECTED 
NEW --> APPROVED

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) 
    
+ Request (application/json)
    + Attributes
        + status: APPROVED, REJECTED (enum, required) 
    

+ Response 200 (application/json)
    + Attributes (Response_OK)

### Create User via Employee Request [POST /employee_requests/{id}/user{?password}]

This service should be used for internal services/processes. Used without `access_token`

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) 

+ Request (application/json)
    + Attributes
        + password: `qwerty` (string, required) 

+ Response 201 (application/json)
    + Headers

            Location: /users/10

    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (`User_Response`)

## Legal Entities [/legal_entities]

### Get Legal Entities List [GET /legal_entities{?edrpou,type,status,legal_form,owner_property_type,page_number,page_size}]

+ Parameters
    + edrpou: 5432345432 (string, optional)
    + type (enum, optional)
        - MSP
    + status: VERIFIED (enum, optional)
        - VERIFIED
        - NOT_VERIFIED
    + owner_property_type: state (enum, optional)
        - STATE
        - PRIVATE
    + legal_form: `ПІДПРИЄМЕЦЬ-ФІЗИЧНА ОСОБА` (enum, optional)
        - ПІДПРИЄМЕЦЬ-ФІЗИЧНА ОСОБА
        - АКЦІОНЕРНЕ ТОВАРИСТВО
        - ВІДКРИТЕ АКЦІОНЕРНЕ ТОВАРИСТВО
        - ЗАКРИТЕ АКЦІОНЕРНЕ ТОВАРИСТВО
        - РЕЛІГІЙНА ОРГАНІЗАЦІЯ
        - ІНШІ ОРГАНІЗАЦІЙНО-ПРАВОВІ ФОРМИ
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[crud_legal_entity_get])

### Get Legal Entity Details by ID [GET /legal_entities/{id}]

+ Parameters
    + id: `1341234` (string)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_legal_entity_get`)

### Create Legal Entity [POST]

+ Request (application/json)
    + Attributes (crud_legal_entity_post)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_legal_entity_get`)

### Update Legal Entity [PATCH /legal_entities/{id}]

+ Parameters
    + id: `24352342` (string, required)

+ Request (application/json)
    + Attributes (crud_legal_entity_patch)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_legal_entity_get`)


## Divisions [/divisions]

### Create new division [POST]

Method to create new division record.

+ Request (application/json)
    + Attributes (`Division`)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`crud_division_get`)

### Update division [PATCH /divisions/{id}]

This method to update the division info by ID.


+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)


+ Request (application/json)
    + Attributes (`Division`)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)


### Search Divisions [GET /divisions/{?type,legal_entity_id,name,page_number,page_size}]

Methods returns list of legal entity divisions.

+ Parameters
    + type: clinic (string, optional)
    + `legal_entity_id`: 314083428 (string, optional)
    + name: Борисп (string, optional)
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`crud_division_get`])

### Get division details [GET /divisions/{id}]

Methods returns Division details by ID.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)

## Ukrainian medical registry records [/ukr_med_registry]

Registry of all the MSP's that has the `state` ownership type 
### Create new ukr_med_registry record [POST]

Method to create new ukr_med_registry record.

+ Request (application/json)
    + Attributes (`crud_ukr_med_registry_post`)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`crud_ukr_med_registry_get`)


### Update ukr_med_registry record [PATCH /ukr_med_registry/{id}]

This method to update the ukr_med_registry info by ID.


+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)


+ Request (application/json)
    + Attributes (crud_ukr_med_registry_post)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (crud_ukr_med_registry_get)


### Search for the ukr_med_registry record [GET /ukr_med_registry{?edrpou}]

Methods returns list of ukr_med_registry records.

+ Parameters
    + edrpou: 123456 (string, required)
 
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`crud_ukr_med_registry_get`])

### Get the ukr_med_registry details [GET /ukr_med_registry/{id}]

Methods returns ukr_med_registry details by ID.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_ukr_med_registry_get`)


# Group Internal. Portal and Reports

## MainStats [/reports/stats]

### Get Main Stats [GET /reports/stats/]

Methods returns agregated numbers of declarations, doctors and msp.
Total statistis are calculated on the date that is transmitted in the current date

**Detailed spec:**

```json
{
    "data": {
      "declarations": 100, -- select count(*) from declarations where inserted_at <= to_date and status in('active', 'pending_verification')
      "msps": 2, -- select count(*) from legal_entities where type ='MSP' and inserted_at between start_date and to_date and is_active = true and status='ACTIVE'
      "doctors": 15 -- select count(*) from employees where inserted_at between start_date and to_date and is_active = 'true' and employee_type = 'DOCTOR' and status = 'APPROVED'
      "pharmacies": 2 -- select count(*) from legal_entities where type ='PHARMACY' inserted_at between start_date and to_date and is_active = 'true' and status='ACTIVE'
      "pharmacists": 6 -- select count(*) from employees where inserted_at between start_date and to_date and is_active = 'true' and employee_type = 'PHARMACIST' and status = 'APPROVED'
    },
}
```


+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object, optional)
            + declarations: 100 (number, required)
            + msps: 2 (number, required)
            + doctors: 15 (number, required)
            + pharmacies: 2 (number, required)
            + pharmacists: 6 (number, required)

### Get Main Stats by Regions [GET /reports/stats/regions/]

Methods returns agregated numbers of declarations, MSP, PHARMACIES, doctors and pharmacists grouped by region.
Total statistis are calculated on the date that is transmitted in the current dste
The service returns statistics for all regions

**Detailed spec**

```
  "declarations": 100, --> declarations.division.addreses['REGISTRATION'].region_ID and status in('active', 'pending_verification')
  "msps": 2, --> legal_entities.[type='MSP' and status='ACTIVE'].addreses['REGISTRATION'].region_ID
  "doctors": 15 --> employees.[employee_type='DOCTOR' & is_active=true and status='APPROVED'].division_id-->divisions.addreses['REGISTRATION'].region_ID
  "pharmacies": 2, --> legal_entities.[type='PHARMACY' and status='ACTIVE'].addreses['REGISTRATION'].region_ID
  "pharmacists": 15 --> employees.[employee_type='PHARMACIST' & is_active=true and status='APPROVED'].division_id-->divisions.addreses['REGISTRATION'].region_ID
  "medication_requests": 30 -->medication_requests.employee_id-->division_id-->divisions.addreses['REGISTRATION'].region_ID
```

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (array[StatsByRegion], optional)
               


### Get Main Stats by Division [GET /reports/stats/division/{division_id}]
Methods returns agregated numbers of declarations and doctors by division

+ Parameters
    + division_id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
         + data (MainStats_Division, optional)



### Get Histogram Stats Declarations [GET /reports/stats/histogram?{from_date}&{to_date}&{interval}]

Methods returns agregated numbers of declarations.
Total statistis are calculated on the date that is transmitted in the parameter to_date
The statistics for the period are calculated using from_date and to_date
If the region is not specified, the service returns statistics for all regions

+ Parameters
    + from_date: 2017-01-28 (string, required)
    + to_date: 2017-02-28 (string, required)
    + interval: DAY (enum, optional)
      - DAY
      - MONTH
      - YEAR
      + Default: DAY

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (array[HistogramStats], optional)

## Divisions [/report/divisions]

### Search Divisions [GET /stats/divisions/map{?type,name,lefttop_latitude,lefttop_longitude,rightbottom_latitude,rightbottom_longitude}]
Method searches divisions by parameters and returnes division details

+ Parameters
    + type: CLINIC (enum, optional) - `Dictionary DIVISION_TYPE`
    + name: Борисп (string, optional)
    + lefttop_latitude: 30.1233 (number, required)
    + lefttop_longitude: 50.32423 (number, required)
    + rightbottom_latitude: 50.32423 (number, required)
    + rightbottom_longitude: 50.32423 (number, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[EntriesDivisionMap], optional)



## Employee Requests [/employee_requests]

### Approve or Reject Employee Request [POST /employee_requests/{id}/actions/{action}]

This service should be used for approve/reject employee request. 

Available employee status transitions: 
NEW --> REJECTED (action=reject) 
NEW --> APPROVED (action=approve)

Method logic described on [confluence page](https://edenlab.atlassian.net/wiki/pages/resumedraft.action?draftId=1316502&draftShareId=39ff8744-9673-48e0-ab0e-08fc80ed3190)

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    + action: approve, reject (enum, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response_OK)

# Group Internal. Media Content Storage

Media Content Storage is using Google Cloud Storage as storage back-end and [Signed URL's](https://cloud.google.com/storage/docs/access-control/create-signed-urls-program) for access control policies. 
Before starting upload or reading a file, you need to access a short-lived Signed URL to access the resource.

After obtaining token upload should be proceeded with [Google Cloud Storage API](https://cloud.google.com/storage/docs/xml-api/put-object-upload).

## Resources [/media_content_storage]

### Request Access to the Media Content Storage Resource [POST /media_content_storage/tokens]

+ Request
    + Attributes
        + bucket
        + action (enum)
            - PUT
            - GET
        + resource_id

+ Response 200 (application/json)
    + Attributes
        + bucket
        + action (enum)
            - PUT
            - GET
        + resource_id
        + signed_url

# Group Internal. Global parameters and Products

## Global parameters [/global_parameters]

### Get Global Parameters [GET]

Methods returns global parameters for declarations.

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Global_Parameters)

### Put Global Parameters [PUT]

Method updates global parameters for declarations.

+ Request (application/json)
    + Attributes (Global_Parameters)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Global_Parameters)

# Group Internal. Digital Signature

## Verification [/verification]

### Digital Signature [POST /digital_signatures]

Method checks digital signature and returns result.

+ Request (application/json)
    + Attributes
        + `signed_content`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes
        + meta (Response__Meta)
        + data (object, optional)
            + `signed_content`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
            + `signed_content_encoding`: base64 (string, required)
            + One of
                + content (Declaration_Details, optional)
                + content (`Employee_Request_Details`, optional)
            + is_valid: true (boolean, required) - Operation result. True - verification success, False - verification failed.
            + signer (object, required) - Certificate content. Contains any available signed data extracted from P7 file.
                + common_name: `Тестовий Користувач Один` (string, optional)
                + country_name: `UA` (string, optional)
                + surname: `Один` (string, optional)
                + given_name: `Користувач Один` (string, optional)
                + organization_name: `Лiкарня №1` (string, optional)
                + state_or_province_name: `Київська` (string, optional)
                + locality_name: `Київ` (string, optional)
                + organzational_unit_name: `Тест` (string, optional)
                + title: `Тест` (string, optional)
                + edrpou: `3323102854` (string, optional)
                + drfo: `3323102854` (string, optional)

# Group Internal. NHS Admin

## Verification [/nhs_admin]

### Get Declarations List [GET /nhs_admin/declarations{?status,page_number,page_size}]

Methods returns list of declarations by combination of patient_id, doctor_id, msp_id.

Response will contain only records that you have access to.

+ Parameters
    + status: active (text, optional) - Search only for active or disabled declarations.
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`nhs_declaration_list`])


### Get Declaration Details by ID [GET /nhs_admin/declarations/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`nhs_declaration`)

## Innms [/innms]
### Create innm [POST]
This method is used to create new innm. Fields descriptions are listed in request Example view.

**Scopes required:** `innm:write`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

    + Attributes (object)
       + include `Innm_Request`

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Innm_Response`

+ Response 409 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 409
        + error
            + type: duplicate (string, required)
            + message: `innm duplicate` (string, required)

### Get innm by id [GET /innms/{id}]
Method returns innms details by ID.

**Scopes required:** `innm:read`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Innm_Response`

### Get Innms List [GET /innms{?id,sctid,name,name_original,page_number,page_size}]

Use this method to obtain list of Innms. If you want to reduce amount of data that is going trough your application, use filter and show only innms is interested in current UI section.

**Scopes required:** `innm:read`

+ Parameters
    + `id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - Innm Identifier.
    + `sctid`: `52574003` (string, optional) - Innm CNOMED code.
    + `name`: `Аміодарон` (string, optional) - Innm local name.
    + `name_original`: `Amiodarone` (string, optional) - Innm original name.
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Innm_Response_Short`]) 


## INNM Dosages [/innm_dosages] 

### Create INNM Dosage [POST]
This method is used to create INNM Dosage. Fields descriptions are listed in request Example view.

**Scopes required:** `innm_dosage:write`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

    + Attributes (object)
       + include (`INNM_Dosage_Request`, required) 

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `INNM_Dosage_Response`

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Property "is_active" has not been defined and the schema does not allow additional properties!` (string, required)

### Deactivate INNM Dosage [PATCH /innm_dosages/{id}/actions/deactivate]
This method is used to deactivate INNM Dosage. Fields descriptions are listed in request Example view.

**Scopes required:** `innm_dosage:deactivate`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `INNM_Dosage_Response`

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Can't deactivate innm dosage. Exist active linked brand!` (string, required)

### Get INNM Dosage by id [GET /innm_dosages/{id}]
Method returns INNM Dosage details by ID.

**Scopes required:** `innm_dosage:read`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `INNM_Dosage_Response`

### Get INNM Dosage List [GET /innm_dosages{?id,name,form,page_number,page_size}]

Use this method to obtain list of INNM Dosage. If you want to reduce amount of data that is going trough your application, use filter and show only INNMs is interested in current UI section.

**Scopes required:** `innm_dosage:read`

+ Parameters
    + `id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - `INNM Dosage Identifier.`
    + `name`: `Аміодарон` (string, optional) - `Innm local name.`
    + `form`:  `PILL` (string, required) - `Dictionary MEDICATION_FORM`
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`INNM_Dosage_Response_Short`]) 

## Medications [/medications] 

### Create Medication [POST]
This method is used to create Medications. Fields descriptions are listed in request Example view.

**Scopes required:** `medication:write`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

    + Attributes (object)
       + include (`Medication_Request`, required) 

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Medication_Response`

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Denumerator unit from Dosage ingredients must be is equal Numerator unit from Container medication!` (string, required)

### Deactivate Medication [PATCH /medications/{id}/actions/deactivate]
This method is used to deactivate Medication. Fields descriptions are listed in request Example view.

**Scopes required:** `medication:deactivate`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_Response`

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Can't deactivate medication. Exist active linked participant (programs medications)!` (string, required)

### Get Medication by id [GET /medications/{id}]
Method returns Medication details by ID.

**Scopes required:** `medication:read`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_Response`

### Get Medications List [GET /medications{?id,innm_dosage_id,name,innm_dosage_name,form,page_number,page_size}]

Use this method to obtain list of Medications. If you want to reduce amount of data that is going trough your application, use filter and show only Medications is interested in current UI section.

**Scopes required:** `medication:read`

+ Parameters
    + `id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - `Medication Identifier.`
    + `innm_dosage_id`: `5052fcaf-58a0-461b-9e98-d60243a1773e` (string, optional) - `INNM Identifier.`
    + `name`: `Аритміл` (string, optional) - `Medication name.`
    + `innm_dosage_name`: `Аміодарон` (string, optional) - `INNM name.`
    + `form`:  `PILL` (string, required) - `Dictionary MEDICATION_FORM`
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
     + Attributes (`Response_Collection_V2`)
       + data (array[`Medication_Response_Short`])

## Medical programs [/medical_programs]

### Create medical program [POST]
This method is used by NHS admin to create new medical program.

**Scopes required:** `medical_program:write`

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

    + Attributes (object)
       + include `medical_programs_request`

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `medical_programs_response`


### Deactivate medical program [PATCH /api/medical_programs/{id}/actions/deactivate]
This method is used by NHS Admin to deactivate medical program.
Medical program can't be deactivate if there is at least one participant in the program.

**Scopes required:** `medical_program:deactivate`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `medical_programs_response`

+ Response 409 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 409
        + error
            + message: `Forbidden to deactivate medical program. Medical program has active participants` (string, required)

### Get medical programs list [GET /api/medical_programs{?id,name,is_active,page_number,page_size}]
Method returns list of medical programs filtering by parameters. By default method returns only active medical programs `is_active=true` 

**Scopes required:** `medical_program:read`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Medical program identifier
    + `name`: `Доступні ліки` (string, optional) - Name of the Medical program
    + `is_active`: `true` (boolean, optional) - Is medical program active or not. Default: true
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
        + data (array[`medical_programs_response`])

### Get medical program by id [GET /api/medical_programs/{id}]
Method returns medical programs details by ID.

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `medical_programs_response`

## Program medications [/program_medications]

### Create Program medication [POST]
This method is used to create new participant of a program - to link exsiting active medication to exsiting active program. Fields descriptions are listed in request Example view.
**Scopes required:** `program_medication:write`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

    + Attributes (object)
       + include (`Program_medications_Request`, required) 

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Program_medications_Response`

+ Response 409 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 409
        + error
            + type: duplicate (string, required)
            + message: `Current medication is already the participant of this program` (string, required)

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `This program is inactive` (string, required)

### Update Program medication [PUT /program_medications/{id}]
This method is used to update flags "is_active" and/or "medication_request_allowed" for Medication within Medical_program. Fields descriptions are listed in request Example view.
**Scopes required:** `program_medication:write`

+ Parameters
    + id: `b3af52d9-e5c0-4876-b717-0dc954a69a28` (string, required) - Record id

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

    + Attributes (object)
       + include (`Program_medications_Update_Request`, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Program_medications_Response`

+ Response 409 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 409
        + error
            + type: unverified (string, required)
            + message: `Medications are already inactive in this program` (string, required)

### Get Program medication list [GET /program_medications{?id,medical_program_id,medical_program_name,innm_dosage_id,innm_dosage_name,medication_id,medication_name,page_number,page_size}]
Method returns list of participants(medications) of medical programs filtering by parameters.  

**Scopes required:** `program_medication:read`

+ Parameters
    + `id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - Program_medications Identifier (medication within the program)
    + `medical_program_id`: `042a3b20-bb08-4e50-83ee-ef23c3b1c0c8` (string, optional) - medical program identifier
    + `medical_program_name`: `Доступні ліки` (string, optional) - medical program name
    + `innm_dosage_id`: `5052fcaf-58a0-461b-9e98-d60243a1773e` (string, optional) - INNM dosage Identifier
    + `innm_dosage_name`: `Артитміл 5 мг` (string, optional) - INNM dosage name
    + `medication_id`:  `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Medication Identifier.
    + `medication_name`: `Аритміл` (string, optional) - Medication name.
    + `page_number`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
        + data (array[`Program_medications_Response`])

### Get Program medication by id [GET /program_medications/{id}]
Method returns participants(medications) of medical programs details by ID.

**Scopes required:** `program_medication:read`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Program_medications_Response`

## Black list users [/black_list_users]

### Create Black list user [POST]
This method is used to add tax_id to black list. Fields descriptions are listed in request Example view.
**Scopes required:** `bl_user:write`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

    + Attributes (object)
       + include (`Black_list_user_Request`, required) 

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Black_list_user_Response`

### Deactivate Black list user [PATCH /api/black_list_users/{id}/actions/deactivate]

This method is used by NHS Admin to deactivate user in black list.

**Scopes required:** `bl_user:deactivate`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Black_list_user_Response`

+ Response 409 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 409
        + error
            + message: `User is not in a black list` (string, required)

### Get Black list user list [GET /black_list_users{?id,tax_id,is_active,page_number,page_size}]
Method returns list of participants(medications) of medical programs filtered by parameters.  

**Scopes required:** `bl_user:read`

+ Parameters
    + `id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - Black list user Identifier 
    + `tax_id`: `3126509816` (string, optional) - tax_id by party_id 
    + `is_active`: `true` (string, optional) - medical program name
    + `page_number`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
        + data (array[`Black_list_user_Response`])

## Party users [/party_users]

### Get Party users list [GET /party_users{?user_id,party_id,page_number,page_size}]
Method returns list of user_id(s) by party_id(s) filtered by parameters.  

**Scopes required:** `party_user:read`

+ Parameters
    + `user_id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional) - user Identifier
    + `party_id`: `79a91507-d409-49fc-b373-934b59c4f694` (string, optional) - Party Identifier
    + `page_number`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
        + data (array[`Party_user_Response`])

# Group Internal. Gandalf

## Gandalf [/api.gndf.io/api]

### Authentication method decision [POST /v1/tables/58f62b96e79e8521f51b5754/decisions]

Method checks request with rules in AuthMethod table, and returns decision based on processed steps.

+ Request (application/json)

    + Headers
    
            X-Application: 58eca20fe79e8563e803dc18
            Authorization: Basic YmJlMGUxMGFkMTc4ZTBlMGY3MmM1Nzg4NjU0ZTQ1MDkwNTFhYjAzMzpmODQ4ZTIyNjFiYWM4M2EzZjhkMjM4ODc4NzUxOWMxZTQzZjViYjAx

    + Attributes
        + phone_availability: true (boolean, required)
        + preferable_auth_method: `OTP_TRUSTEE` (string, required)

+ Response 200 (application/json)
    + Attributes
        + meta (object, required)
            + code: 200 (number, required)
        + data (object, optional)
            + _id:`58f70df5e79e8521f451dcf0` (string, required)
            + table (object, required)
                + _id: `58f62b96e79e8521f51b5754` (string, required) - table UUID
                + title: `AuthMethod` (string, required) - table name
                + description: `Authentication method decision` (string, required)
                + matching_type: `decision` (string, required) - table type: decision/scoring
                + variant (object, required)
                    + _id: `58f62b96e79e8521f51b5753` (string, required)
                    + title: `AuthMethod` (string, required)
                    + description: `Authentication method decision` (string, required)
            + application: `58eca20fe79e8563e803dc18` (string, required) - application UUID
            + title: `method is OTP_TRUSTEE` (string, required) - final decision title
            + description: `Phone available and method OTP_TRUSTEE` (string, required) - final decision description
            + `final_decision`: `OTP_TRUSTEE` (string, required) - final decision
            + request (object, required)
                + phone_availability: true (boolean, required)
                + preferable_auth_method: `OTP_TRUSTEE` (string, required)
            + created_at: `2017-04-19T07:12:53+0000` (string, required) - date created at
            + updated_at: `2017-04-19T07:12:53+0000` (string, required) - date updated at

# Group Public. Medical Service Provider Integration Layer

## oAuth [/api/oauth]

1. Client UI: redirects user to Login UI with `client_id`, `redirect_uri` and `response_type=code` query params;
2. Login UI: completes [Session]() auth flow with `apps:create` scope;
3. Login UI: renders page with Approval (which lists requested scopes);
4. User: approves scopes;
5. Login UI: sends `POST /apps` request and redirects user to location returned in `Location` header;
6. Client: exchanges `code` from query parameters to an `access_token` by sending `POST /tokens` request with `grant_type=authorization_code`.
7. Client Back-End: stores `refresh_token` (in back-end!) and sends `access_token` to Client UI;
8. Client UI: stores `access_token` (in local storage, cookie, etc.) and makes all future requests with `Auhtorization: Bearer <access_token>` header.

**Notes:**
- If User already has approval with insufficient scopes, all steps are required, but Login UI MAY render page that shows only newly added scopes.
- When `access_token` expires, Client repeats steps 6-8 but via `grant_type=refresh_token`.

**API-key:**
- For identifiers MIS clients (as a brocker) we use term API-key. MIS must be **mandatory** send API-key when called e-Health API. 
- API-key its a `client_secret` - Medical Information System secret key issued upon integration request.
- API-key dispatched in Request HEADER as a `API-key` attribute. Example: 
```
HEADERS
Content-Type:application/json
Authorization:Bearer mF_9.B5f-4.1JqM
API-key:uXhEczJ56adsfh3Ri9SUkc4en
```
- If MIS don't send API-key in Request HEADER, API return 401 error wih message "API-KEY header required".


**Sequence Diagram**

![oAuth Sequence](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgb0F1dGggRmxvdwoKQ2xpZW50IC0-IExvZ2luIFVJOiByZWRpcmVjdCB0bwANCSB3aXRoIGBjACoFX2lkYCwgYAAgCF91cmlgIGFuZCBgcmVzcG9uc2VfdHlwZT1jb2RlYCBxdWVyeSBwYXJhbXMKAEcJAGUNY29tcGxldGUgU2Vzc2lvbiBhdXRoIGZsb3cAJA1Vc2VyOiByZW5kZXIgcGFnZQCBEAZBcHByb3ZhbCAod2hpY2ggbGlzdHMgcmVxdWVzdGVkIHNjb3BlcykKVXNlcgCBXA5hADUFZQAbBwCBEA0Agh8FU2VydmVyOiBzZW5kIGBQT1NUIC9hcHBzYABWCAoAHAsAgjcOSFRUUCAyMDEsAIEVCmFuZCBMb2NhdGlvbiBoZWFkZXIAggMNAIMGBgCCdQt1c2VyIHRvIHVybCByZXR1cm5lZCBpbiBgAD4IYAA_CACDPQoAgSYSAIExBnRva2Vucz9ncmFudACDGAZhdXRob3JpegCBCwVfY29kZSAtIGV4Y2hhbmdlIGAAgzcGZnJvbQCDNgxldGVycyB0byBhbiBgYWNjZXNzXwBWBWAAgXsQAIIzDnRvcmUgcmVmcmVzaCAAgQcFAIIrEACBdggAJQZgACUHAFYHIChpbiBiYWNrLWVuZCEpAIRoBQCDDwYAdw0gdG8Agj8HIFVJCm5vdGUgb3ZlcgBMEAAmDihpbiBsb2NhbACBIQVhZ2UsIGNvb2tpZSwgZXRjLgBnBm1ha2VzIGFsbCBmdXR1AIFHBQCEWgVzAIYSB0F1aHQAgkQJOiBCZWFyZXIgPACCFgw-AIMlCQo&s=modern-blue)

### Show Login UI [GET /sign-in{?client_id,redirect_uri,scope,email}]

**Attention!**
Use following HOSTs for oAuth 2.0 Authentication

Env     | Host
--------|-----
DEMO    | http://auth.demo.ehealth.world
PREPROD | https://auth.ehealth.world
PROD    | https://auth.ehealth-ukraine.org

You MUST redirect your users to this URL to obtain oAuth Code Grant (which is later exchanged to Access Token).

User will see rendered login page, which structure differ by a list of requested scopes and security measures applied by DevOps team.

For security purposes, we will set `X-Frame-Options: deny` header that will disallow opening this page in an iframe.

+ Parameters
    + client_id: `mis-001` (string, required) - Medical Information System ID issued upon integration request. Used to identify application developer.
    + redirect_uri: http://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.
    + email: email@example.com

+ Response 200 (text/html; charset=UTF-8)

    + Headers

            X-CSRF-Token: my-csrf-token

### Exchange oAuth Code Grant to Access Token [POST /oauth/tokens]

After obtaining oAuth Code Grant, it should be exchanged to an `access_token` **on your back-end**. 

General recommendations:

- Never expose `client_secret` to your front-end.
- Also we recommend to avoid pushing it to the application source code, to limit number of developers that have access to it.

Exposed client credentials may be blocked for a security reasons, you will need to contact administrator to receive a new credentials.

+ Request (application/json)

    + Headers

            X-CSRF-Token: my-csrf-token

    + Attributes (object)
        + token (object)
            + client_id: `mis-001` (string, required) - Medical Information System ID issued upon integration request. Used to identify application developer.
            + client_secret: `mis-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + code: 299383828 (string, required) - oAuth code grant.
            + `grant_type`: authorization_code (string, fixed, required) - oAuth Grant Type. Currently only `authorization_code` is supported.
            + redirect_uri: http://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
            + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Access_Token)

### Use Refresh Token for Access Token extension [POST /api/oauth/tokens]

Currently `access_token` and `refresh_token` are configured to have same lifetime, so we don't expect you to refresh it. 

In future, you will be able to refresh access tokens to extend `access_token` lifetime.

+ Request (application/json)

    + Headers

            X-CSRF-Token: my-csrf-token
            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + token (object)
            + client_id: `mis-001` (string, required) - Medical Information System ID issued upon integration request. Used to identify application developer.
            + client_secret: `mis-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + refresh_token: `my-oauth-refresh-token` (string, required) - oAuth refresh token.
            + `grant_type`: refresh_token (string, fixed) - oAuth Grant Type. Currently only `authorization_code` is supported.

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Access_Token)

## Dictionaries [/api/dictionaries]

Method is used to retreive eHealth dictionaries

Response **$.data** object contains a list of all dictionaries. 

Each dictionary is an object that contains *{key}*:*{value}* pairs where:
* ***{key}*** is a dictionary record
* ***{value}*** is a dictionary record description

### Get dictionaries [GET]

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (array[`Dictionary`])

## OTP Verification [/api/verifications]

Method is used to verify that provided in declarartion request phone number is valid and is in service

### Initialize OTP Verification [POST]

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
               
    + Attributes (object)
        + `phone_number`: `+380508887700` (string, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (OTP)

### Complete OTP Verification [PATCH /api/verifications/{phone_number}/actions/complete]

+ Parameters
    + `phone_number`: `+380508887700` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    + Attributes (object)
        + code: 3782 (number)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (OTP)

### Find Verifications by Phone Number [GET /api/verifications/{phone_number}]

+ Parameters
    + `phone_number`: `+380508887700` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Response_verification_by_phone)

## Declaration Requests [/api/declaration_requests]

[Declaration Request]() is a life-cycle entity that is used to perform operations on [Declarations]().

After declaration request is signed and/or verified (depends on verification logic) it will be automatically moved to [Declarations]().

### Get Declaration Requests List [GET /api/declaration_requests{?employee_id,legal_entity_id,status,page_number,page_size}]

Use this method to obrain list of Declaration Requests for an `empolee_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Also we suggest use `employee_id` and `legal_entity_id` to make sure that end-user understands context of actions that he or she will perform.

Method returns shortened details, to obtain full information - get Declaration Request it by it's ID.

+ Parameters
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - user_id of a doctor.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + status: active (enum, optional)
        - NEW
        - APPROVED
        - SIGNED
        - CANCELLED
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Declaration_Request_Short`])

### Get Declaration Request by ID [GET /api/declaration_requests/{id}]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Declaration_Request_Public_Response`
            + employee (Employee_Minimal)
            + `legal_entity` (`Medical_Service_Provider`)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + seed: hash (string, required) - Hash of previous block in declarations chain or other random component that should be signed with declaration.
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

### Create Declaration Request [POST]

This method is used to create Declaration Request (as part of Declaration creation process). Fields descriptions are listed in request Example view.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `declaration_request` (Declaration_Request_Public)

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `NEW` (string, required)
            + employee (Employee_Minimal, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)

### Approve Declaration Request [PATCH /api/declaration_requests/{id}/actions/approve]

Use this method to approve previously created Declaration Request.

In case if authentication_method is OTP, request example:
```
{
  "verification_code": 3748
}
```
In case if authentication_method is OFFLINE, request body should be empty. But before approve patient's scanned documents should be uploaded to the ([Signed URL's](https://cloud.google.com/storage/docs/access-control/create-signed-urls-program))
on demand. 
Clients can use signed URL's to directly access Google Cloud Storage via their API 
([Google Cloud Storage API](https://cloud.google.com/storage/docs/xml-api/put-object-upload))

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `verification_code`: 2836 (number, optional) - required if authentication_method is OTP

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `REJECTED` (string, required)
            + employee (Employee_Minimal, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.

### Reject Declaration Request [PATCH /api/declaration_requests/{id}/actions/reject]

Use this method to reject previously created Declaration Request.

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `APPROVED` (string, required)
            + employee (Employee_Minimal, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.


### Resend Authorization OTP on Declaration Request [POST /api/declaration_requests/{id}/actions/resend_otp]

Use this method to resend sms on previously created Declaration Request.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (OTP)

### Sign Declaration Request [PATCH /api/declaration_requests/{id}/actions/sign]

This method is used to sign Declaration Request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property. 
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of Declaration Request in Media Content Storage, created or update MPI records and create declaration if signature is all checks is passed.

Signed content MUST consists of JSON object with Declaration Request data and printout template. Object that need to be signed is returned by `Get Declaration request by ID` response, `JSON.Path: $.data`.
The only field that can and must be changed is JSON.Path: `$.data.patient_signed`. It should be changed to `true`.

**Important**
Invoke Get Declaration Request by ID to obtain seed - Hash of previous block in declarations chain or other random component that should be signed with declaration

**Signed object example:**
```
{
    "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
    "start_date": "2017-03-02",
    "end_date": "2017-03-02",
    "person": {
      "first_name": "Петро",
      "last_name": "Іванов",
      "second_name": "Миколайович",
      "birth_date": "1991-08-19",
      "birth_country": "Україна",
      "birth_settlement": "Вінниця",
      "gender": "MALE",
      "email": "email@example.com",
      "tax_id": "3126509816",
      "secret": "secret",
      "documents": [
        {
          "type": "PASSPORT",
          "number": "120518"
        }
      ],
      "addresses": [
        {
          "type": "RESIDENCE",
          "country": "UA",
          "area": "Житомирська",
          "region": "Бердичівський",
          "settlement": "Київ",
          "settlement_type": "CITY",
          "settlement_id": "43432432",
          "street_type": "STREET",
          "street": "вул. Ніжинська",
          "building": "15",
          "apartment": "23",
          "zip": "02090"
        }
      ],
      "phones": [
        {
          "type": "MOBILE",
          "number": "+380503410870"
        }
      ],
      "authentication_methods": [
        {
          "type": "OTP",
          "phone_number": "+380508887700"
        }
      ],
      "emergency_contact": {
        "first_name": "Петро",
        "last_name": "Іванов",
        "second_name": "Миколайович",
        "phones": [
          {
            "type": "MOBILE",
            "number": "+380503410870"
          }
        ]
      },
      "confidant_person": [
        {
          "relation_type": "PRIMARY",
          "first_name": "Петро",
          "last_name": "Іванов",
          "second_name": "Миколайович",
          "birth_date": "1991-08-19",
          "birth_country": "Україна",
          "birth_settlement": "Вінниця",
          "gender": "MALE",
          "tax_id": "3126509816",
          "secret": "secret",
          "documents_person": [
            {
              "type": "PASSPORT",
              "number": "120518"
            }
          ],
          "documents_relationship": [
            {
              "type": "PASSPORT",
              "number": "120518"
            }
          ],
          "phones": [
            {
              "type": "MOBILE",
              "number": "+380503410870"
            }
          ]
        }
      ],
      "patient_signed": false,
      "process_disclosure_data_consent": true
    },
    "scope": "family doctor",
    "employee": {
      "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
      "position": "P6",
      "party": {
        "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
        "first_name": "Петро",
        "last_name": "Іванов",
        "second_name": "Миколайович",
        "email": "email@example.com",
        "phones": [
          {
            "type": "MOBILE",
            "number": "+380503410870"
          }
        ]
      }
    },
    "legal_entity": {
      "name": "Клініка Борис",
      "short_name": "Борис",
      "legal_form": "140",
      "public_name": "ЦПМСД №1",
      "edrpou": "5432345432",
      "licenses": [
        {
          "license_number": "fd123443",
          "issued_by": "Кваліфікацйна комісія",
          "issued_date": "2017-02-28",
          "expiry_date": "2017-02-28",
          "active_from_date": "2017-02-28",
          "what_licensed": "реалізація наркотичних засобів",
          "order_no": "K-123"
        }
      ],
      "accreditation": {
        "category": "друга",
        "issued_date": "2017-02-28",
        "expiry_date": "2017-02-28",
        "order_no": "fd123443",
        "order_date": "2017-02-28"
      },
      "addresses": [
        {
          "type": "RESIDENCE",
          "country": "UA",
          "area": "Житомирська",
          "region": "Бердичівський",
          "settlement": "Київ",
          "settlement_type": "CITY",
          "settlement_id": "43432432",
          "street_type": "STREET",
          "street": "вул. Ніжинська",
          "building": "15",
          "apartment": "23",
          "zip": "02090"
        }
      ],
      "phones": [
        {
          "type": "MOBILE",
          "number": "+380503410870"
        }
      ],
      "email": "email@example.com",
      "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b"
    },
    "division": {
      "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
      "legal_entity_id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
      "name": "Бориспільське відділення Клініки Борис",
      "addresses": [
        {
          "type": "RESIDENCE",
          "country": "UA",
          "area": "Житомирська",
          "region": "Бердичівський",
          "settlement": "Київ",
          "settlement_type": "CITY",
          "settlement_id": "43432432",
          "street_type": "STREET",
          "street": "вул. Ніжинська",
          "building": "15",
          "apartment": "23",
          "zip": "02090"
        }
      ],
      "phones": [
        {
          "type": "MOBILE",
          "number": "+380503410870"
        }
      ],
      "email": "email@example.com",
      "type": "clinic",
      "external_id": "3213213"
    },
    "content": "Declaration content",
    "seed": "ghTjh409dnhHUkdi4jdh6hded"
  }
}
```

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `signed_declaration_request`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (`Declaration_short`)


## Declarations [/api/declarations]

### Get Declarations List [GET /api/declarations{?employee_id,legal_entity_id,status,page_number,page_size}]

Use this method to obrain list of Declarations for an `empolee_id` and legal_entity_id. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Method returns shortened details, to obtain full information - get Declaration Details by it's ID.

+ Parameters
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - `user_id` of a Doctor.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - MSP ID.
    + status: active (string, optional)
        + Default: active
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`nhs_declaration_list_Public`])

### Get Declaration by ID [GET /api/declarations/{id}]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + include `Declaration_Details`

### Verify declaration  [PATCH /declarations/{id}/verify]

This method is used by NHS_admin to verify declarations that has been created with the offline authorization.
declaration status will be changed to `active`

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    + Attributes (crud_Declaration_patch)

+ Response 200 (application/json)
    + Attributes (Response_OK)

### Reject declaration  [PATCH /declarations/{id}/reject]

This method is used by NHS_admin to reject declarations that has been created with the offline authorization.
In case if the verification result is not acceptable.
declaration status will be changed to `closed`

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (crud_Declaration_patch)

+ Response 200 (application/json)
    + Attributes (Response_OK)

## Employees [/api/employees]

The set of the end-points may be used to manage `Doctors`, `HR's` and `Accountants` that
are employed by legal entity (such as Medical Service Provider).

According to the strong binding of the Employees to the Employer (legal entity)
all GET-endpoints returning Employee info are mounted through the
`/legal_entities/{legal_entity_id}` path.

### Get Employees List [GET /api/employees{?tax_id,party_id,edrpou,legal_enyity_id,division_id,status,employee_type,page_number,page_size}]

Use this end-point to obtain all Employees of the legal entity specified by the `legal_entity_id`. 

We suggest to use `status` filter to limit response size. Eg. you MAY want to list only active employees for everyones except HR's. Also it's a good idea to filter list by employee `type`.

Method returns shortened details (for DOCTOR and PHARMACIST - additional returns specialities information), to obtain full information - get Employee it by ID.

+ Parameters
    + tax_id: 3015492561 (string, optional)
    + party_id: 3015492561 (string, optional)
    + edrpou: 38782323 (string, optional)
    + `legal_enyity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0152` (string, optional)
    + division_id: `d290f1ee-6c54-4b01-90e6-d701748f0152` (string, optional)
    + status: APPROVED (enum, optional)
        - APPROVED
        - DISMISSED
    + employee_type: DOCTOR (string, optional) 
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Employee_Short`])

### Get Employee Details [GET /api/employees/{employee_id}]

Response structure differs depending on employee type:

**For HR, ACCOUNTANT, OWNER or PHARMACY_OWNER:**

* Person info
* Employee info
* User Info

**For DOCTOR or PHARMACIST:**

* Person info
* Employee info
* User Info
* Doctor info

+ Parameters
    + employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Employee_Response)
            + division (Division_Short)
            + `legal_entity` (`Legal_Entity_Short`)


### Deactivate Employee [PATCH /api/employees/{id}/actions/deactivate]

Use this method to deactivate employee. OWNER and PHARMACY_OWNER can't be deactivated using this method.
(the 409 error with message 'Owner can't be deactivated').
OWNER and PHARMACY_OWNER deactivates when corresponding legal_entity deactivates.
Employee deactivation: 
1. Revoke role from user

2. Deactivate declarations

3. Update employee parameters:
 - change status=DISMISSED and end_date=now

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Employee_Response)
            + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
            + division (Division_Short)
                + `legal_entity` (`Legal_Entity_Short`)

## Employee Requests [/api/employee_requests]

### Create Employee Request [POST]

Employee_Request consist of the three mandatory parts:
* Person info
* Employee info
* User Info

Additionally to register/update Physician the `Doctor info` should be passed.

When the `Employee_Request` will be posted the Invitation e-mail with a request
secret token will be sent to the User specified in the request.

It can be also used to update employee data. In this case `employee_id` should be passed in the payload.

User may accept or decline Invitation.

For changes to take effect employee must confirm the changes

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `employee_request` (Employee_Request)


+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Employee_Request_Details)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + inserted_at: `2017-05-05T14:09:59.232112` (string, required)
            + updated_at: `2017-05-05T14:09:59.232112` (string, required)

### Get Employee Requests List [GET /api/employee_requests{?status,page_number,page_size}]

+ Parameters
    + status: NEW (enum, optional)
        - NEW
        - REJECTED
        - APPROVED
        + Default: NEW
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Employee_Request_Short`])

### Get Employee Request by ID [GET /api/employee_requests/{id}]

This service should be used with `access_token` authetification method.

+ Parameters

    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) 

+ Request

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM (string, optional) -- the Authorization is optional if `token` is passed
            API-key: uXhEczJ56adsfh3Ri9SUkc4en


+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (Employee_Request_Details)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + inserted_at: `2017-05-05T14:09:59.232112` (string, optional)
            + updated_at: `2017-05-05T14:09:59.232112` (string, optional)
        + urgent (object, optional)
            + user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

## Persons [/api/persons]

### Search for a Person [GET /api/persons{?first_name,last_name,second_name,birth_date,tax_id,phone_number,birth_place,page_number,page_size}]

This method allows to search for a Person (MPI) without disclosing personal data.

Method returns only **requested** parameters, birth place and second name in addition for manual identification on MSP side.

+ Parameters
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
    + tax_id: 3126509816 (string, optional)
    + phone_number: `+380508887700` (string, optional)
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Person_Short`])

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `too_many_results`
            + message: `This API method returns only exact match results, please retry with more specific search result` (string)

### Get Person Declaration [GET /api/persons/{id}/declaration]

This method allows to receive active person declarations issued by current legal entity (based on access_token). It can be used to check if Patient has active declarations in other Legal Entities.

It returns:
1. Short declaration info if **active declaration found** AND issued by legal entity that is available for `access_token` scope.
2. 404 error if **active declaration not found**.
3. 403 if **active declaration found** issued by **other** (not available by access scopes) legal entity.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[Declaration_Details])

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Active declaration belongs to another msp` (string)

### Reset authentication method [PATCH /api/persons/{id}/actions/reset_authentication_method]

This method allows to reset (set to **NA**) person authentication method.


+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (`Person_Short`)

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Not found active declaration with person for this legal entity!` (string)

## Legal Entities [/api/legal_entities]

### Get Legal Entities [GET /api/legal_entities{?edrpou,legal_entity_id,settlement_id,type,owner_property,status,mis_verified,nhs_verified,page_number,page_size}]

Use this method to get list of legal entities filtering by parameters.
List consists of legal entities with parameter `is_active = true`.

+ Parameters
    + `edrpou`: `341086` (string, optional)
    + `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + settlement_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + type: MSP (enum, optional)
        - MSP
        + Default: MSP
    + owner_property: state (enum, optional)
        - state
        - private
    + status: ACTIVE (enum, optional)
        - ACTIVE
        - CLOSED
    + mis_verified: VERIFIED (enum, optional)
        - VERIFIED
        - NOT_VERIFIED 
    + `nhs_verified`: false (boolean, optional)
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
                + include `Legal_Entity_Request_Public_Short`
                + status: ACTIVE (enum, required)
                    - ACTIVE
                    - CLOSED
                + `mis_verified`: NOT_VERIFIED (enum, required)
                    - NOT_VERIFIED
                    - VERIFIED
                + `nhs_verified`: false (boolean, required)

### Get Legal Entity by ID [GET /api/legal_entities/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Legal_Entity_Request_Public_Short`
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `mis_verified`: NOT_VERIFIED (enum, required)
                - NOT_VERIFIED
                - VERIFIED
            + `nhs_verified`: false (boolean, required)
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri

### Create/Update Legal Entity [PUT]

Use this method to register a new Legal Entity.

New Legal Entity is created with 
status = ACTIVE
mis_verified = NOT_VERIFIED (if legal entity IS NOT in ukr_med_registry) and VERIFIED (if legal entity IS in ukr_med_registry)
nhs_verified = false

Method receives signed message (pkcs7) including signed content, digital signature and signer public key. 
All signature fields will be validated (including signer certificate authority).
There is a [**dummy method**](##dummy-for-legal-entity) that describes the latest legal entity data model and can be used as documentation.
Signed content MUST consists of JSON object with Legal Entity data:

```
{
  "name": "Клініка Адоніс21",
  "short_name": "Адоніс21",
  "public_name": "Адоніс21",
  "type": "MSP",
  "owner_property_type": "STATE",
  "legal_form": "140",
  "edrpou": "38782323",
  "kveds": [
    "86.10"
  ],
  "addresses": [
    {
      "type": "REGISTRATION",
      "country": "UA",
      "area": "Волинська область",
      "region": "Бердичівський",
      "settlement": "Київ",
      "settlement_type": "CITY",
      "settlement_id": "43432432",
      "street_type": "STREET",
      "street": "вул. Ніжинська",
      "building": "15",
      "apartment": "23",
      "zip": "02090"
    }
  ],
  "phones": [
    {
      "type": "MOBILE",
      "number": "+380503410870"
    }
  ],
  "email": "sp.virny+100@gmail.com",
  "owner": {
    "first_name": "Петро",
    "last_name": "Іванов",
    "second_name": "Миколайович",
    "tax_id": "3015492565",
    "birth_date": "1985-06-16",
    "birth_place": "Вінниця, Україна",
    "gender": "FEMALE",
    "email": "sp.virny+100@gmail.com",
    "documents": [
      {
        "type": "PASSPORT",
        "number": "120518"
      }
    ],
    "phones": [
      {
        "type": "MOBILE",
        "number": "+380503410870"
      }
    ],
    "position": "P1"
  },
  "medical_service_provider": {
    "licenses": [
      {
        "license_number": "fd123443",
        "issued_by": "Кваліфікацйна комісія",
        "issued_date": "1991-08-19",
        "expiry_date": "1991-08-19",
        "active_from_date": "1991-08-19",
        "what_licensed": "реалізація наркотичних засобів",
        "order_no": "K-123"
      }
    ],
    "accreditation": {
      "category": "FIRST",
      "issued_date": "1991-08-19",
      "expiry_date": "1991-08-19",
      "order_no": "fd123443",
      "order_date": "1991-08-19"
    }
  },
  "security": {
    "redirect_uri": "http://example2.com"
  },
  "public_offer": {
    "consent": true,
    "consent_text": "Consent text"
  }
}
```

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `signed_legal_entity_request`: `...` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Request_Public
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `mis_verified`: NOT_VERIFIED (enum, required)
                - NOT_VERIFIED
                - VERIFIED
            + `nhs_verified`: false (boolean, required)
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Request_Public
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `mis_verified`: NOT_VERIFIED (enum, required)
                - NOT_VERIFIED
                - VERIFIED
            + `nhs_verified`: false (boolean, required)
            + is_active: true (boolean, required)
            + inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + inserted_at: `2005-10-30 10:45` (string, required) - timestamp
            + created_by_mis_client_id:  `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + updated_at: `1991-08-19T00:00:00.000Z` (string, required)
            + updated_by: `userid` (string, required)
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

### Verify Legal Entity by MIS [PATCH /api/legal_entities/{id}/actions/mis_verify]

Use this method to verify legal entity by MIS.
Available transition:
`mis_verified` NOt_VERIFIED --> VERIFIED

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Legal_Entity_Request_Public_Short`
            

### Verify Legal Entity by NHS [PATCH /api/legal_entities/{id}/actions/nhs_verify]

Use this method to verify legal entity by NHS.
Available transition:
`nhs_verified` false --> true

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Legal_Entity_Short`
            


### Deactivate Legal Entity [PATCH /api/legal_entities/{id}/actions/deactivate]

Use this method to deactivate msp.
1. Deactivate emploees by legal entity

2. Deactivate legal entity
Update status on CLOSED

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + include `Legal_Entity_Short`


## Divisions [/api/divisions]

### Get divisions [GET /api/divisions{?ids,name,legal_entity_id,type,status}]

+ Parameters
    + ids: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
    + name: `Бориспільське відділення клініки` (string, optional)
    + legal_entity_id: `d8b5f374-0f3c-46e6-baf1-21d97b4c9ff5` (string, optional)
    + type: CLINIC (string, optional) - Dictionary DIVISION_TYPE
    + status: ACTIVE (string, optional)
        - ACTIVE
        - INACTIVE

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (`crud_division_get`)

### Update division [PATCH /api/divisions/{id}]

This method to update the division info by ID.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Attributes (`crud_division_post`)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)

### Create division [POST]

This method to create the division info by ID.

+ Request (application/json)
    + Attributes (`crud_division_post`)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)

### Deactivate division [PATCH /api/divisions/{id}/actions/deactivate]
+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)

### Activate division [PATCH /api/divisions/{id}/actions/activate]
+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)

## UAdresses [/api/uaddresses]
API for searching Ukrainian Addresses

## Search Streets [/api/uaddresses/streets]

### List of Streets by Search Params [GET /api/uaddresses/streets{?settlement_id,name,type}]

+ Parameters
    + settlement_id: `eea333b5-e26d-4e3e-92e2-2ab37b131502` (string, required) - Settlement identifier
    + name: `Незалежності` (string, optional) - Street name
    + type: STREET (string, optional) - Street type (Dictionary STREET_TYPE)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Street`])

## Search Settlements [/api/settlements]

### List Of Cities By Search Params [GET /api/uaddresses/settlements{?name,region,district,koatuu}]

Use this method to obtain list of cities. If you want to reduce amount of data that is going trough your application, use `name`, `region`, `district` or `koatuu classifier` filters and show only cities you are interested in.

+ Parameters
    + name: Новосілки (string, optional) - Name of searching settlement
    + region: Київ (string, optional) - Province name
    + district: `Києво-Святошинський` (string, optional) - Administrative district of province
    + koatuu: `2625286301` (string, optional) - koatuu classifier id

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Settlement`])

## Search Regions [/api/uaddresses/regions]

### List Of Regions By Search Params [GET /api/uaddresses/regions{?name,koatuu}]
+ Parameters
    + name: Київ (string, optional) - Province name
    + koatuu: `2625286301` (string, optional) - koatuu classifier id

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Region`])

## Search Districts [/api/uaddresses/districts]

### List Of Districts By Search Params [GET /api/uaddresses/districts{?region,name,koatuu}]
+ Parameters
    + region: Київ (string) - Province name
    + name: `Києво-Святошинський` (string, optional) - Administrative district of province
    + koatuu: `2625286301` (string, optional) - koatuu classifier id

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_District`])

### Districts by Region [GET /api/uaddresses/regions/290f1ee-6c54-4b01-90e6-d701748f0851/districts{?name,koatuu}]

+ Parameters
    + name: `Києво-Святошинський` (string, optional) - Filter by district name
    + koatuu: `2625286301` (string, optional) - koatuu classifier id

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_District_Short`])

### Settlements by district [GET /api/uaddresses/districts/290f1ee-6c54-4b01-90e6-d701748f0851/settlements{?name,koatuu}]

Get list of cities by district

+ Parameters
    + name: `Київ` (string, optional) - Filter by settlement name
    + koatuu: `2625286301` (string, optional) - koatuu classifier id

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Settlement_Short`])

## Roles [/admin/roles]

Roles are used to simplify Users access management.
Role scopes limits list of scopes that User can have.
By changing Role scopes this change will immidiately propagate to all users within role.

Roles are set separately for each Client.

### List Roles [GET /admin/roles{?name,page_number,page_size}]

+ Parameters
    + name: `My role` (string, optional) - Return only roles that contains `name` substring.
    + `page_number`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Role_Response`])

### Get Role by ID [GET /admin/roles/{id}]

+ Parameters
    + id: `role-1380df72-275a-11e7-93ae-92361f002671` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Role_Response`)

## Client secret [/admin/clients]

### Refresh client secret [PATCH /admin/clients/{id}/refresh_secret]

This method is used to refresh client secret for existing client (legal entity)
Only legal entity owner can request new client secret for his own legal entity

**Scopes required:** `secret:refresh`

+ Parameters
    + id: `role-1380df72-275a-11e7-93ae-92361f002671` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Client`)

# Group Public. Reimbursement

## Drugs [/apidrugs]

### Get drugs list [GET /api/drugs{?innm_id,innm_name,innm_sctid,innm_dosage_form,innm_dosage_id,innm_dosage_name,medication_code_atc,page_number,page_size}]

Get drugs list by filters.

**Scopes required:** `drug:read`

+ Parameters
    + `innm_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Innm identifier. 
    + `innm_name`: `Аміодарон` (string, optional) - Innm local name.
    + `innm_sctid`: `52574003` (string, optional) - Innm CNOMED code.
    + `innm_dosage_form`: `PILL` (string, optional) - Innm_dosage form.
    + `innm_dosage_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Innm_dosage identifier.
    + `innm_dosage_name`: `Аміодарон 200мг таблетки` (string, optional) - Innm_dosage name.
    + `medication_code_atc`: `С01BD01` (string, optional) - Medication code ATC..
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[Drug_Response])

## Medication Request Requests [/api/medication_request_requests]

[Medication request Request]() is a life-cycle entity that is used to perform operations on [Medication requests]().

After Medication request Request is signed it will be automatically moved to [Medication requests]().

> **Important:** (Specific only for "Доступні ліки")
> You can't create new Medication Request for medication in case there is another Medication Request with the same medication in this period (between started_at and ended_at)

> **Important:** Dispense of Medications under this Medication Request is possible in period between dispense_valid_from and dispense_valid_to

### Get Medication Request Requests List [GET /api/medication_request_requests{?employee_id,person_id,status,page_number,page_size}]

Use this method to obtain list of Medication request Requests an `employee_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Also we suggest use `employee_id` and `legal_entity_id` to make sure that end-user understands context of actions that he or she will perform.

Method returns shortened details, to obtain full information - Get Medication request Request it by it's ID.

+ Parameters
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person_id of a pacient. 
    + `status`: `NEW` (enum, optional). Default `NEW` 
        - NEW
        - SIGNED
        - EXPIRED
        - REJECTED
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Medication_request_Request_Public_Response`]) 
 

### Get Medication Request Request by ID [GET /api/medication_request_requests/{id}]

Use this method to obrain full information of Medication request Request an `id`.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - request id

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Request_Public_Response`

    
### PreQualify Medication Request Request [POST /api/medication_request_requests/prequalify]

This method is used to pre-qualify data Medication request Request (possibility to give reimbursement for medication according the programs) before creating Medication request Request. Fields descriptions are listed in request Example view.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `medication_request_request` (object)
            + include `Medication_request_Request_Qualify_post_data`
        + `programs` (array[`Qualify_Medication_request_Request_List_program_post_data`], required) - Medical programs list for qualify
        
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        +  data (array[`Qualify_Medication_request_Request_Responce`]))

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only for active MPI record can create Medication request Request!` (string, required)


### Create Medication Request Request [POST /api/medication_request_requests]

This method is used to create Medication request Request (as a part of Medication request creation process). 
Fields description are listed in request Example view.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `medication_request_request`(`Medication_request_Request_post_data`)

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Medication_request_Request_Public_Response`

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only active employee with type DOCTOR can create medication request!` (string, required)

### Sign Medication Request Request [PATCH /api/medication_request_requests/{id}/actions/sign]

This method is used to sign Medication request Request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property. 
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of Medication request Request in Media Content Storage and create Medication request if signature is all checks is passed.

Signed content MUST consists of JSON object with Medication request Request data. Object that need to be signed is returned by `Get Medication request Request by ID` response, `JSON.Path: $.data`.
The only field that can and must be changed is JSON.Path: `$.data.employee_signed`. It should be changed to `true`.

**Important**
Invoke Get Medication request Request by ID to obtain seed - Hash of previous block in Medication request Request chain or other random component that should be signed with Medication request Request.

**Signed object example:**
```
{
}
```
+ Parameters
    + id: 6a8a83a4-ac39-4547-bfa2-813bc87362a4 (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `signed_medication_request_request`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (`Medication_request_Public_Response`)

### Reject Medication Request Request [PATCH /api/medication_request_requests/{id}/actions/reject]

Use this method to reject previously created Medication request Request.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (`Medication_request_Request_Public_Response`)

## Medication Request [/api/medication_requests]
### Qualify Medication Request by ID [POST /api/medication_requests/{id}/actions/qualify]

This method is used to qualify (possibility to use Innm for the program) Medication request by Id . Fields descriptions are listed in request Example view.

+ Parameters
    + id: `2848a935-5fd7-48ba-b235-a9b5d475c647` (string, required) - `Medication request identifier`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `programs` (array[`Qualify_Medication_request_Request_List_program_post_data`], required) - Medical programs list for qualify
    
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        +  data (array[`Qualify_by_ID_Request_for_Medication_request_Responce`]))

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only for active MPI record can create medication request!` (string, required)

### Get Medication request by ID [GET /api/medication_requests/{id}]

Use this method to obtain full information of Medication request an `id`.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response`

### Get Medication requests List [GET /api/medication_requests{?legal_entity_id,employee_id,person_id,status,request_number,created_from,created_to,medication_id,page_number,page_size}]

Use this method to obtain list of Medication request an `employee_id` or/and `person_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Also we suggest use `employee_id` to make sure that end-user understands context of actions that he or she will perform.

Method returns shortened details, to obtain full information - get Medication request it by it's ID.

+ Parameters
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - legal entity identifier.
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person_id of a pacient. 
    + `status`: `ACTIVE` (enum, optional). Default `ACTIVE` 
        - ACTIVE
        - COMPLETED
        - EXPIRED
        - REJECTED
    + `request_number` : `0000-243P-1X53-EH38` (string, optional) - Public medication request human readable number
    + `created_from`: `2017-08-17` (string, optional) - Medication request creation date period start, which is determined by the external system. Format *DATE '2017-08-17'*
    + `created_to`: `2017-08-30` (string, optional) - Medication request creation date period end, which is determined by the external system. Format *DATE '2017-08-30'*
    + `medication_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b5b` (string, optional) - innm dosage id
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
   + Attributes (`Response_Collection_V2`)
        + data (array[`Medication_request_Public_Response`]) 

### Reject Medication Request [PATCH /api/medication_requests/{id}/actions/reject]

Use this method to reject previously created and signed Medication request.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `Reason`: `Помилка призначення. Несумісні препарпти.` (string, optional) - Medication request reject reason

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (`Medication_request_Public_Response`)
            + include (`Medication_request_Reject_Public_Response`)

### Resend Medication Request [PATCH /api/medication_requests/{id}/actions/resend]

Use this method to resend SMS for person with info medication request number & verification code.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (`Medication_request_Public_Response`)

### Get Medication Dispenses list by Medication Request ID [GET /api/medication_requests/{id}/dispenses{?status}]

Use this method to obtain list of Medication Dispenses by doctor with medication request ID. 

Only Medication dispenses linked to medication request id will be shown. If you want to reduce amount of data that is going trough your application, use `status` filter and show only dispenses that Doctor is interested in.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)
    + status: PROCESSED (string, optional) - Status

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_Dispense_Response`


## Medication Dispense [/api/medication_dispenses]

Medication Dispense - Indicates that a medication product has been dispensed for a named person/patient

1. Dispense of medication is possible only under Medication Request and during the period specified in Medication Request

2. **Medical program** - mandatory attribute for the first phase. There is no options to dispense medication without program

3. **Dispense details** - several medications of different manufacturers with the same innm can be dispensed at a time. Total of medication_qty should be less or equal to medication quantity specified in Medication Request

**Sequence diagram**

![Medication Dispense Sequence](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgTWVkaWNhdGlvbiBEaXNwZW5zZQpwYXJ0aWNpcGFudCBQaGFybWFjeQAIDUdXABcNZUhlYWx0aAoKIyBDcmVhdGUgbQBMCmQATggAQggtPkdXOiA8PAAkBwBuEz4-CkdXACEGQXV0aG9yaXplAA0FKwBjBwAeIQCBCwctPgAoCVZlcmlmeQCBDQxyZXF1ZXN0ABIaAIEyCCBwZXJpb2QAOxoAQwdlZCBwcm9ncmFtAFwkcwCBEhNHZXQgcmVpbWJ1cnNlbWVudCByYXRlAIFECi0AgwYIOiA8PFJlc3BvAIIoBiAgICAKICAgIGFsdCBQcm9jZXNzAINFFSAgICAgICAAg00JAIMECAAZGwBYByAgICAAgwMSAA4MAIMRDAAqJgCDFBJDaGFuZwCFABUgc3RhdHVzACoSAIF4HGVsc2UgUmVqZWN0AIFiLQAZGgCBWTUAKiUAgStibmQK&s=modern-blue)

### Create Medication Dispense [POST /api/medication_dispenses{?code}]

This method is used to dispense medications to patient

+ Parameters
    + `code`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    + Attributes (object)
        + include `Medication_Dispense_Request`

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Medication_Dispense_Response`

### Process Medication Dispense [PATCH /api/medication_dispenses/{id}/actions/process]

This method is used to process created dispense

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    + Attributes (object)
        + payment_id: F324H456 (string, optional)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + include `Medication_Dispense_Response`

### Reject Medication Dispense [PATCH /api/medication_dispenses/{id}/actions/reject]

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + include `Medication_Dispense_Response`

### Get Medication Dispenses List [GET /api/medication_dispenses{?id,medication_request_id,legal_entity_id,division_id,status,dispensed_from,dispensed_to,page_number,page_size}]

+ Parameters
    + id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication dispense ID
    + medication_request_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication request ID
    + legal_entity_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Legal entity ID
    + division_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Division ID
    + status: PROCESSED (string, optional) - Status
    + dispensed_from: '2017-09-01' (string, optional) - date of dispense
    + dispensed_to: '2017-10-01' (string, optional) - date of dispense
    + page_number: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_Dispense_Response`

### Get Medication Dispense by ID [PATCH /api/medication_dispenses/{id}]

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + include `Medication_Dispense_Response`

## Reimbursement Report [/api/reimbursement_report]

Reimbursement Report combines information about Medication requests and corresponding Medication Dispenses

**Scopes required:** `reimbursement_report:read`

1. **MIS (OWNER)** is allowed to see Medication Requests made by its' legal_entity and related to those Medication Requests Medication Dispenses

2. **PHARMACY (PHARAMCY_OWNER)** - is allowed to see Medication Dispenses made by its' legal_entity and related to those Medication Dispenses Medication Requests.

### Get Reimbursement Report [GET /api/reimbursement_report{?date_from_request,date_to_request,date_from_dispense,date_to_dispense,page_number,page_size}]

+ Parameters
    + date_from_request: `2017-09-01` (date, optional) - Start date for Medication Requests created date
    + date_to_request: `2017-10-01` (date, optional) - End date for Medication Requests created date
    + date_from_dispense: `2017-09-01` (date, optional) - Start date for Medication Dispense disbursed_at date
    + date_to_dispense: `2017-10-01` (date, optional) - End date for Medication Dispense disbursed_at date
    + page_number: 2 (number, optional) - Page number.
    + page_size: 1000 (number, optional) - A limit on the number of objects to be returned. Default: 1000


+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
         + data (array[`Reimbursement_Report_Response`])


# Group Dummy. Create legal entity

## Dummy for legal entity [/dummy/legal_entities]

### Create/Update Legal Entity [PUT]

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + include Legal_Entity_Request_Public

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Request_Public
            + status: VERIFIED (enum, required)
                - VERIFIED
                - DECLINED
                - VERIFICATION_EXP
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Request_Public
            + status: VERIFIED (enum, required)
                - VERIFIED
                - DECLINED
                - VERIFICATION_EXP
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

# Data Structures
## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (Response__Pagination, fixed-type)

### `Response_Collection_V2`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (`Response__Pagination__V2`, fixed-type)

### `Response_Collection_OK`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response__Process_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)
    + affordances (array[Affordance], required) - List of available affordances and their URLs

### `Response_verification_by_phone`
+ `phone_number`: `+380508887700` (string, required)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: http://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ `request_id`: `req-adasdoijasdojsda` (string) - [Request ID](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: type_atom (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array)
    + `entry_type`: `json_data_proprty` (string) - Type of error.
    + entry: $.cvv (string) - JSON Path to an invalid property.
    + rules (array)
        + rule: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
        + params (array) - Validation Parameters.

### `Response__Pagination`
+ limit: 20 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
+ cursors (object)
    + `starting_after`: 56c31536a60ad644060041af (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    + `ending_before`: 56c31536a60ad644060041aa (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
+ size: 1000 (number) - Total number of objects in collection.
+ has_more: false (boolean) - Is this collection have more data to load in the same style as last request loaded it.

### `Response__Pagination__V2`
+ page_number: 2 (number) - Page number.
+ page_size: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
+ total_entries: 1000 (number) - Total number of objects in collection.
+ total_pages: 23 (number) - Total number of pages.

## Persons
### `Person`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ tax_id: 3126509816 (string, optional)
+ secret: secret (string, required)
+ documents (array[Document], required)
+ addresses (array[Address], required)
+ phones (array[Phone], optional)
+ `authentication_methods` (array[Authentication_Method], required)

### `Confidant_Person`
+ relation_type: PRIMARY (enum, required)
    - PRIMARY
    - SECONDARY
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ tax_id: 3126509816 (string, optional)
+ secret: `secret` (string, required)
+ documents_person (array[Document], required)
+ documents_relationship (array[Document], required)
+ phones (array[Phone], optional)

### `Emergency_Contact`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ phones (array[Phone], required)

### `Person_Request`
+ include `Person`
+ emergency_contact (object, required)
    + include `Emergency_Contact`
+ `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc.


### `Person_Full`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ Include Person_Request
+ confident_persons (array[Person])  - Should be set if this Person is disabled, underage, etc.
+ is_active: true (boolean, required)
+ merged_ids (array)
    + (object)
        + id: `7bca069f-21e4-4546-90cf-b65e3f39d93d` (string, required)
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Person_Minimal`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Person_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required) - ISO Datetime.
+ tax_id: 3126509816 (string, optional)
+ phones (array[Phone], required)
+ birth_settlement: Вінниця (string, required)

### `Person_Medication_Request`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required) - ISO Datetime.
+ addresses (array[Address], required)

### `Authentication_Method`
+ type (enum, required)
    - OTP
    - OFFLINE
    - NA
+ phone_number: `+380508887700` (string, optional)

## `Merge_Candidates`
### `Merge_Candidate`
+ id: `8aa4d353-a58f-45f6-b5ce-a89a9cc39391` (string, optional) - Unique record identifier
+ person_id: `50320ee5-2bca-472c-a1a0-28e2e003ec2a` (string, optional) - Merge candidate identifier
+ `master_person_id`: `cb553981-4b7f-45ec-8f73-f77faf2dcb22` (string, optional) - Master person identifier
+ status: NEW (enum, optional) - Record status
        - NEW
        - MERGED
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.


## DeclarationRequests
### `crud_Declaration_request_get`
+ id: `73FF38F0-A873-4DB4-A47A-CC0F3D7A6D6A` (string, required)
+ data: `json structure` (string, required)
+ status: `pending` (string, required)
+ inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ updated_at: `2005-10-30 10:45` (string, required) - timestamp

### `declaration_request_patch`
+ id: `73FF38F0-A873-4DB4-A47A-CC0F3D7A6D6A` (string, required)
+ status: `pending` (string, required)

### `media_content`
+ type: `PASSPORT` (string, required)
+ url: `https://google.com.ua` (string, required)

## Declarations
### Declaration
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ person_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851`m (string, required)
+ `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851`m (string, required)
+ scope (enum, required)
    - family_doctor
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T10:45:16.000Z` (string, required)
+ status (enum, optional)
    - active
    - closed

### `crud_Declaration_patch`
+ status (enum, optional)
    - active
    - closed

### `crud_Declaration_get`
+ include `Declaration`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `Declaration_Request_Public`
+ person(`Person_Request`, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Registered Medical Service Provider Division identifier.
+ scope (enum, required)
    - family_doctor

### `Declaration_Request_Public_Response`
+ start_date: `2017-03-02` (string, required) - Should be defined on the client side.
+ end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
+ person(`Person_Request`, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ scope (enum, required)
    - family doctor

### `Declaration_Request_Details_Public`
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ person(`Person_Request`, required)
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ employee (Employee_Minimal)
+ `legal_entity` (`Medical_Service_Provider`)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ division (`Division_Details`)
+ scope (enum, required)
    - family doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)

### `Declaration_Request_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ person (Person_Minimal)
+ employee (Employee_Minimal)
+ `legal_entity` (`MSP_Short`)
+ division (`Division_Short_List`)

### `Declaration_short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T00:00:00.000Z` (string, required)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ scope (enum, required)
    - family doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ person_id: `5fb57a5d-1457-430e-9678-c81cec72779f` (string, required)
+ `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ inserted_at: `2017-07-06T16:54:05.161571Z` (string, required)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Declaration_Details`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T00:00:00.000Z` (string, required)
+ person(`Person_Short`)
    + `emergency_contact` (`Emergency_Contact`, required)
    + `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc.
+ employee (`Employee_Declaration_Short`)
+ division (`Division_Short`)
+ `legal_entity` (MSP_Details)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ scope (enum, required)
    - family doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Declaration_Details_Public`
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ person(`Person_Request`, required)
    + id: `5fb57a5d-1457-430e-9678-c81cec72779f` (string)
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
    + `legal_entity` (`Medical_Service_Provider`)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ division (`Division_Details`)
+ scope (enum, required)
    - family doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)

## Party
### `Party_Short`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Party_Request`
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ tax_id: 3126509816 (string, optional)
+ email: email@example.com (string, optional)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)

### `Party_Response`
+ id:`b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ tax_id: 3126509816 (string, optional)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)

### `Party_Update`
+ include `Party_Short`
+ tax_id: 3126509816 (string, required)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ documents (array[Document], optional)
+ phones (array[Phone], optional)

### `crud_party`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ tax_id: 3126509816 (string, required)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)


### `crud_party_post`
+ include `crud_party`

### `crud_party_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_party`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

## Employees
### `crud_employee`
+ party_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ legal_entity_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
+ `employee_type`: DOCTOR (string) - `Dictionary EMPLOYEE_TYPE`
+ position: P1 (string, required) - `Dictionary POSITION`
+ start_date: 2017-02-28 (string, required)
+ end_date: 2017-02-28 (string, optional)
+ status: NEW, APPROVED (enum, required)
+ `Doctor` (DoctorNew, optional)
+ `status_reason`: `new_employee` (string, optional)

### `crud_employee_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_employee`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `crud_employee_post`
+ include `crud_employee`


### `Employee`
+ user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ msp_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `employee_type`: doctor (enum) - `Dictionary EMPLOYEE_TYPE`
+ position: P6 (string, required) - `Dictionary POSITION`
+ speciality: THERAPIST (string) - `Dictionary SPECIALITY_TYPE`
+ employee_details (DoctorNew, optional)
+ start_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, optional)

### `Employee_Minimal`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
    + email: email@example.com (string, optional)
    + phones (array[Phone], optional)

### `Employee_For_Declaration_Minimal`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ `employee_type`: doctor (enum) - `Dictionary EMPLOYEE_TYPE`

### `Employee_Response`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P8 (string, required) - `Dictionary POSITION`
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: APPROVED, DISMISSED (enum, required)
+ `employee_type`: DOCTOR (string, required) - `Dictionary EMPLOYEE_TYPE`
+ party (Party_Response)
+ doctor (DoctorNew, optional)

### `Employee_Update`
+ division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ position: лікар (string, required)
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: APPROVED, DISMISSED (enum, required)
+ party (Party_Update)
+ doctor (DoctorNew, optional)

### `Employee_Request`
+ division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
+ position: P8 (string, required) - `Dictionary POSITION`
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: NEW, REJECTED, APPROVED (enum, required)
+ `employee_type`: DOCTOR (string, required) - `Dictionary EMPLOYEE_TYPE`
+ party (Party_Request)
+ doctor (DoctorNew, optional)

### `Employee_Request_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ status: NEW, REJECTED, APPROVED (enum, required)
+ inserted_at: `2018-03-02T10:45:16.000Z` (string, required)
+ edrpou: 5432345432 (string, required)
+ `legal_entity_name`: Клініка Борис (string, required)
+ include `Party_Short`


### `Employee_Request_Details`
+ include `Employee_Request`

### `Employee_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P1 (string, required) - `Dictionary: POSITION`
+ `employee_type`: DOCTOR (string) - `Dictionary: EMPLOYEE_TYPE`
+ status: APPROVED, DISMISSED (enum, required) - Employee status
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ division (`Division_Short`)
+ `legal_entity` (`Legal_Entity_Short`)
+ doctor (DoctorNew_Short)

### `Employee_Declaration_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P1 (string, required) - `Dictionary: POSITION`
+ `employee_type`: DOCTOR (string) - `Dictionary: EMPLOYEE_TYPE`
+ status: APPROVED, DISMISSED (enum, required) - Employee status
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ division_id: `4cffa825-8b5b-4cba-9a38-fb57733e14b2` (string, optional) - division identifier
+ `legal_entity`: `be3a154c-3e07-496d-9680-f22c443f5d0c` (string, required) - legal entity identifier
+ doctor (DoctorNew_Short)

## `Legal_Entities`

### `crud_legal_entity`
+ name: Клініка Борис (string, required)
+ short_name: Борис (string, required)
+ type: MSP (string, required) - `Dictionary LEGAL_ENTITY_TYPE`
+ edrpou: 5432345432 (string, required)
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (array[Email], required)
+ is_active: true (boolean)
+ public_name: Клініка Борис (string, required)
+ kveds: 86.1 (array, required)
+ status: VERIFIED (enum, required)
    - VERIFIED
    - NOT_VERIFIED
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (enum, required) - `Dictionary LEGAL_FORM`
+ `medical_service_provider` (MSP, optional)
+ `created_via_mis_id`: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)

### `crud_legal_entity_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_legal_entity`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `crud_legal_entity_post`
+ include `crud_legal_entity`

### `crud_legal_entity_patch`
+ name: Клініка Борис (string, optional)
+ short_name: Борис (string, optional)
+ public_name: Клініка Борис (string, required)
+ type: MSP (string, optional) - `Dictionary LEGAL_ENTITY_TYPE`
+ addresses (array[Address], optional)
+ phones (array[Phone], optional)
+ email: email@example.com (array[Email], optional)
+ is_active: true (boolean)
+ public_name: Клініка Борис (string, optional)
+ status: VERIFIED (enum, optional)
    - VERIFIED
    - NOT_VERIFIED
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (enum, required) - `Dictionary LEGAL_FORM`
+ `medical_service_provider` (MSP, optional)

### `Legal_Entity_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Борис (string, required)
+ short_name: Борис (string, required)
+ public_name: Клініка Борис (string, required)
+ type: MSP (string, required)
+ edrpou: 5432345432 (string, required)
+ status: ACTIVE (enum, required)
    - ACTIVE
    - CLOSED

## `Legal_Entity_Requests`

### `Legal_Entity_Request_Public`
+ name: Клініка Борис (string, required)
+ short_name: Борис (string, optional)
+ public_name: Борис (string, optional)
+ type: MSP (string, required)
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 32323454 (string, required)
+ kveds: 86.10 (array, required)
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (string, required)
+ owner (Owner)
+ `medical_service_provider` (MSP)
+ security (object, fixed-type)
    + `redirect_uri`: `http://example.com` (string, required, fixed) - Redirect uri
+ public_offer (object)
    + `consent`: true (boolean, required)
    + `consent_text`: `Відповідно до Закону України “Про захист персональних даних” з метою ведення реєстрів електронної системи охорони здоров’я та забезпечення її функціонування у дослідній експлуатації надаю згоду обраному оператору та адміністратору електронної системи охорони здоров’я на обробку моїх персональних даних з первинних джерел, а також на здійснення дій пов’язаних зі збиранням, реєстрацією, накопиченням, зберіганням, адаптуванням, зміною, поновленням, використанням, поширенням, розповсюдженням, реалізацією, передачею, знеособленням, знищенням будь-яких відомостей. Додатково надаю згоду на доступ до моїх персональних даних уповноважених третіх осіб, що визначає дії оператора МІС та адміністратора у разі отримання запиту від уповноваженої третьої особи щодо надання доступу до персональних даних. Підтверджую достовірність вказаних мною даних та добровільність надання цих даних до електронної системи охорони здоров’я, що працює у дослідній експлуатації. Усвідомлюю, що у випадку надання мною невірної інформації, мені може бути відмовлено в реєстрації в електронній системі охорони здоров’я. Зобов’язуюсь дотримуватись Регламенту функціонуваня електронної системи охорони здоров’я.` (string, required)

### `Legal_Entity_Request_Public_Short` 
+ name: Клініка Борис (string, required)
+ short_name: Борис (string, optional)
+ public_name: Борис (string, optional)
+ type: MSP (string, required)
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required)
+ kveds: 86.1 (array, required)
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (string, required)
+ `medical_service_provider` (MSP)
+ security (object, fixed-type)
    + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
+ is_active: true (boolean, required)
+ inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ created_by_mis_client_id:  `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

## `Divisions`
### `Division`
+ name: Бориспільське відділення Клініки Борис (string, required)
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (string, required)
+ type: clinic (enum, required)
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ external_id: `3213213` (string, optional)
+ location (Location, optional)

### `Division_Details`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ include Division

### `Division_Short_List`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Борис (string, required)
+ type: clinic (enum, required)
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE

### `Division_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Борис (string, required)
+ `legal_entity_id`: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ type: CLINIC (enum, required)
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ mountain_group: false (boolean, optional)

### `crud_division_post`
+ include `Division`

### `crud_division_get`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ include `Division`
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ mountain_group: false (boolean, optional)

## `Owners`
### `Owner`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ tax_id: 3015492563 (string, required)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ email: `email@example.com` (string, required)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)
+ position (string, required) - `Dictionary POSITION`

## `Medical_Service_Providers`

### `crud_msp`
+ `legal_entity_id`: 5432345432 (string, required)
+ accreditation (MSP_Accreditation, optional)
+ licenses (array[MSP_License], required)

### `crud_msp_get`
+ include `crud_msp`

### `crud_msp_post`
+ include `crud_msp`

### `crud_msp_patch`
+ accreditation (MSP_Accreditation, optional)
+ licenses (array[MSP_License], required)

### `Medical_Service_Provider`
+ name: Клініка Борис (string, required)
+ short_name: Борис (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ public_name: ЦПМСД №1 (string, optional)
+ edrpou: 5432345432 (string, required)
+ licenses (array[MSP_License], required)
+ accreditation (MSP_Accreditation, optional)
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: `email@example.com` (string, required)

### `MSP_Short`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка Борис (string, required)
+ short_name: Борис (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required)

### `MSP_Details`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка ЦПМСД №1 (string, required)
+ short_Name: ЦПМСД №1 (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ public_name: ЦПМСД №1 (string, optional)
+ edrpou: 5432345432 (string, required)
+ status: `ACTIVE` (enum, required)
    + ACTIVE
    + CLOSED
+ email: `email@example.com` (string, required)
+ phones (array[Phone], required)
+ addresses (array[Address], optional)

### `MSP`
+ licenses (array[MSP_License], required)
+ accreditation (MSP_Accreditation, optional)

## `Ukr_med_registries`
### `ukr_med_registry`
+ edrpou: 5432345432 (string, required)
+ name: Клініка Борис (string, optional)

### `crud_ukr_med_registry_post`
+ include `ukr_med_registry`

### `crud_ukr_med_registry_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `ukr_med_registry`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

## `Access_Tokens`
### `Access_Token`
+ value: `my-oauth-token` (string, required) - oAuth access token.
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - User identifier
+ name: `access_token` (string, required) - oAuth token name
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - oAuth token identifier
+ expires_at: 1498749591 (number, required) - expiration date-time timestamp
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space
    + refresh_token: `my-oauth-refresh-token` (string, required) - oAuth refresh token
    + redirect_uri: `http://example.com/` (string, required) - Redirect URI
    + `grant_type`: `authorization_code` 
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Client ID of authorized user.

## Shared

### `System_Logging`
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### Address
+ type: RESIDENCE (string, required) - `Dictionary ADDRESS_TYPE`
+ country: UA (enum[string], required) - `Dictionary COUNTRY`
+ area: Житомирська (string)
+ region: Бердичівський (string, optional)
+ settlement: Київ (string)
+ `settlement_type`: CITY (string) - `Dictionary SETTLEMENT_TYPE`
+ settlement_id: 43432432 (string, required)
+ `street_type`: STREET (string, optional) - `Dictionary STREET_TYPE`
+ street: `вул. Ніжинська` (string, optional)
+ building: 15 (string, required)
+ apartment: 23 (string, optional)
+ zip: 02090 (string, optional)


### Phone
+ type: MOBILE (string, required) - `Dictionary PHONE_TYPE`
+ number: `+380503410870` (string, required)

### Email
+ type: PERSONAL, PUBLIC (enum[string], required)
+ email: `email@example.com` (string, required)

### Document
+ type: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
+ number: 120518 (string, required)

### `Medical_Certificate`
+ name: Диплом доктора медицини (string, required)
+ number: AA1234BC (string, required)
+ degree: `Doctor of Medicine (MD, Dr.MuD, Dr.Med)` (string, required)
+ issue_date: 2017-02-28 (string, required)
+ issued_by: Національний медичний університет імені О.О. Богомольця (string, required)
+ started_date: 2016-08-29T09:12:33.001Z (string, optional)
+ expiration_date: 2016-08-29T09:12:33.001Z (string, optional)

### `Medical_License`
+ category (enum, required)
    - Атестація на визначення знань і практичних навиків
+ type (enum, required)
    - диплом
+ issued_by: Кваліфікацйна комісія (string, required)
+ order_no: DV4312324 (string, required)
+ issued_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, required)

### `Medical_Education`
+ institution_name: Академія Богомольця (string, required)
+ certificate_Number: DD123543 (string, required)
+ degree (enum, required)
    - Doctor of Medicine
    - Bachelor of Medicine
    - Bachelor of Surgery
    - Doctor of Osteopathic Medicine
    - Master of Clinical Medicine
+ start_date: 2017-02-28 (string, required)
+ finished_date: 2017-02-28 (string, required)
+ speciality (enum, required)
    - Загальна практика - сімейна медицина
    - Педіатрія
    - Підліткова терапія
    - Терапія

### `MSP_Accreditation`
+ category: друга (enum, required)
    - друга
    - перша
    - не акредитований
+ issued_date: `2017-02-28` (string, optional) - дата видачі
+ expiry_date: `2017-02-28` (string, optional)
+ order_no: fd123443 (string, required) - номер наказу МОЗ
+ order_date: `2017-02-28` (string, required) - дата наказу МОЗ


### `MSP_License`
+ license_number: fd123443 (string, optional)
+ issued_by: Кваліфікацйна комісія (string, required)
+ issued_date: `2017-02-28` (string, required)
+ expiry_date: `2017-02-28` (string, optional)
+ `active_from_date`: `2017-02-28` (string, required)
+ what_licensed: реалізація наркотичних засобів (string, optional)
+ order_no: ВА43234 (string, required) - номер наказу


## OTPs
### OTP
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
+ status: `NEW` (enum, required)
    - NEW
    - CANCELED
    - VERIFIED
    - UNVERIFIED
+ `code_expired_at`: `2017-07-10T12:20:16.300597Z` (string, required)
+ active: true (boolean, required)

## Dashboards

### StatsByRegion
+ from_date: `2017-09-01` (string, optional)
+ to_date: `2017-09-02` (string, optional)
+ regions (array, required)
    + (object)
        + include (`StatsByRegionadd`)

### StatsByRegionadd
+ `region` (object, required)
    + include `Region`
+ `period` (object, required)
    + include `RegionStats`    
+ `total` (object, required)
    + include `RegionStats` 

### RegionStats
+ declarations_total: 100 (number, required)
+ declarations_created: 102 (number, required)
+ declarations_closed: 2 (number, required)
+ msps: 2 (number, required)
+ doctors: 15 (number, required)
+ pharmacies: 2 (number, required)
+ pharmacists: 6 (number, required)

### Region
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Київ` (string, required)

### HistogramStats
+ period_type: DAY (string, required)
+ period_name: `2017-09-01` (string, required)
+ declarations_created: 0 (number, required)
+ declarations_closed: 0 (number, required)
+ declarations_active_start: 1 (number, required)
+ declarations_active_end: 1 (number, required)
+ medication_requests_created: 0 (number, required)
+ medication_requests_closed: 0 (number, required)
+ medication_requests_active_start: 1 (number, required)
+ medication_requests_active_end: 1 (number, required)

### Interval
+ from_date: `2017-02-01` (string, required)
+ to_date: `2017-02-30` (string, required)

### MainStats
+ declarations: 100 (number, required)
+ msps: 2 (number, required)
+ doctors: 15 (number, required)   

### `MainStats_Division`
+ stats (DivisionStats, required)
+ division (DivisionName, required)

### DivisionStats
+ declarations: 100 (number, required)
+ msps: 2 (number, required)
+ doctors: 15 (number, required)  

### DivisionName
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Пединовка` (string, required)

### RegionReport
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Київ` (string, required)

### DataEntriesDivisionMap
+ total_pages (number, required)
+ total_entries (number, required)
+ page_size (number, required)
+ page_number (number, required)
+ entries (array[EntriesDivisionMap], optional)

### EntriesDivisionMap
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Aдоніс` (string, required)
+ type: CLINIC, AMBULANT_CLINIC, FAP (enum, required)
+ addresses (Address, optional)
+ contacts (ContactInfo, optional)
+ coordinates (Location, optional)

### ContactInfo
+ email: email@example.com (string, optional)
+ phones (array[Phone], optional)

### Location
+ latitude: 30.1233 (number, required)
+ longitude: 50.32423 (number, required)

## DoctorsNew
### DoctorNew
+ educations (array[Education], required)  - освіта
+ qualifications (array[Qualification], optional) - підвищення кваліфікації
+ specialities (array[Speciality], required)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `DoctorNew_Short`
+ specialities (array[Speciality], required)

### Education
+ country: UA (string, required) - `Dictionary COUNTRY`
+ city: Київ (string, required)
+ institution_name: Академія Богомольця (string, required)
+ issued_date: 2017-02-28 (string, required)
+ diploma_number: DD123543 (string, required)
+ degree: MASTER (string, required) - `Dictionary EDUCATION_DEGREE`
+ speciality: Педіатр (string, required)


### ScienceDegree
+ country: UA (string, required) - `Dictionary COUNTRY`
+ city: Київ (string, required)
+ degree (string, required) - `Dictionary SCIENCE_DEGREE`
+ institution_name: Академія Богомольця (string, required)
+ diploma_number: DD123543 (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: 2017-02-28 (string, required)

### Qualification
+ type: SPECIALIZATION (string, required) - `Dictionary QUALIFICATION_TYPE`
+ institution_name: Академія Богомольця (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: 2017-02-28 (string, required) - дата отримання сертифікату
+ certificate_number: 2017-02-28 (string, required)
+ valid_to: 2017-02-28 (string, optional) - дійсний до
+ additional_info: додаткова інофрмація (string, optional) - додаткова інформація

### Speciality
+ speciality: THERAPIST (string, required) - `Dictionary SPECIALITY_TYPE`
+ speciality_officio: true (boolean, required) - спеціальність за посадою
+ level: FIRST (string, required) - `Dictionary SPECIALITY_LEVEL`
+ `qualification_type`: AWARDING (string, required) - `Dictionary SPEC_QUALIFICATION_TYPE`
+ attestation_name: Академія Богомольця (string, required) - орган що видав
+ attestation_date: 2017-02-28 (string, required) - дата отримання
+ valid_to_date: 2020-02-28 (string, required) - дата дії до
+ certificate_number: AB/21331 (string, required)

### Affordance
+ action (string, required) - Affordance action.
+ url (string, required)

## Dictionaries
### `Dictionary`
+ name: DOCUMENT_TYPE (string, required) - Unique dictionary name
+ values (object)
    + key: value (string, optional) - List of dictionary entries as Key:Value pairs
+ labels (array)
    - SYSTEM
    - EXTERNAL
+ is_active: true (boolean, required)

## NHS Portal
### `nhs_declaration_list`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851`m (string, required)
+ scope (enum, required)
    - family_doctor
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T10:45:16.000Z` (string, required)
+ status (enum, optional)
    - active
    - closed
+ person (`Person_Minimal`, required)
+ `legal_entity` (`Legal_Entity_Short`, required)
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)

### `nhs_declaration_list_Public`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ `employee` (`Employee_For_Declaration_Minimal`, required)
+ `division` (`DivisionName`, required)        
+ scope (enum, required)
    - family_doctor
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T10:45:16.000Z` (string, required)
+ status (enum, optional)
    - active
    - closed
+ person (`Person_Minimal`, required)
+ `legal_entity` (`Legal_Entity_Short`, required)
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)

### `nhs_declaration`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ include `Declaration_Request_Details_Public`
+ `media_content`: `http://cs5.pikabu.ru/post_img/big/2015/12/04/5/1449210847155432089.jpg`,`http://www.readersdigest.ca/wp-content/uploads/2011/01/4-ways-cheer-up-depressed-cat.jpg`  (array, required)

## Global Parameters and Products
### `Global_Parameters`
+ `declaration_term`: `30` (string, required) - термін дії декларації
+ `declaration_request_expiration`: `30` (string, required) - термін дії заявки на створення декларації
+ `employ_request_expiration`: `30` (string, required) - термін дії заявки на створення працівника
+ `verification_request_expiration`: `30` (string, required) - термін дії заявки на верифікацію декларації
+ adult_age: `18` (string, required) - вік повноліття
+ billing_date: `2` (string, required) - дата біллінгу (1-28)

## UAddresses
### `Response_Street`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string) - Address ID
+ settlement_name: Новосілки (string) - City name
+ street_type: вул (string) - Type of street
+ street_name: `Єрмоленка Володимира` (string) - Street name

### `Response_Settlement_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - Settlement ID
+ settlement_name: Новосілки (string) - City name

### `Response_Settlement`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - Settlement ID
+ region_id: `99310bc4-ac7c-4f1f-bc29-b3ae25bd96bc` (string)
+ region: Київ (string) -  Region name
+ district: `Києво-Святошинський` (string) - District name
+ district_id: `99310bc4-ac7c-4f1f-bc29-b3ae25bd96bc` (string)
+ settlement_name: Новосілки (string) - City name
+ mountain_group: 0 (string) - Mountain group
+ type: `С` (string, optional) - Settlement type
+ koatuu: 3520380802 (string, optional) - KOATUU code
+ parent_settlement: Берегово (string, optional) - Parent settlement name
+ parent_settlement_id: `99310bc4-ac7c-4f1f-bc29-b3ae25bd96bc` (string)

### `Response_Region`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - Region ID
+ region: Київ (string) -  Region name
+ koatuu: 3520380802 (string, optional) - KOATUU code

### `Response_District_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - District ID
+ district: `Києво-Святошинський` (string) - District name

### `Response_District`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - District ID
+ region: Київ (string) -  Region name
+ region_id: `c4c0f907-8b60-483e-bbf6-dfb34ab91574` (string)
+ district: `Києво-Святошинський` (string) - District name
+ koatuu: 3520380802 (string, optional) - KOATUU code

### `Create_Settlement`
+ region: Київ (string, required) -  Region name
+ district: `Києво-Святошинський` (string, required) - District name
+ settlement_name: Новосілки (string, required) - City name

### `Create_Street`
+ region: Київ (string, required) -  Region name
+ district: `Києво-Святошинський` (string, required) - District name
+ settlement_name: Новосілки (string, required) - City name
+ street_type: вул (string, required) - Type of street
+ street_name: `Єрмоленка Володимира` (string, required) - Street name
+ street_number: 67 (string, required) - Number of building
+ postal_code: 02140 (string, required) - Postal code

## Users
### User (object)
+ email: `john@example.com` (string, required) - User email.

### `User_Data` (User)
+ settings (object) - User settings.
+ priv_settings (object) - User private settings.

### `User_Response` (User_Data)
+ id: `user-1380df72-275a-11e7-93ae-92361f002671` (string) - Internal user ID, a UUID string.
+ `created_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

## Drugs
### `Drug_Response`
+ `id`: `ae9bf68e-3c98-4027-9211-535f7dad7a87` (string, required)
+ `name`: `Аміодарон 200мг таблетки` (string, required)
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `innm` (`Innm_Public_Response_Short`, required) 
+ `dosage` (`Dosage_drug`, required)
+ `packages` (array [`Medication_package`], required)

### `Medication_package`
+ `container_dosage` (`Dosage_container`, required)
+ `package_qty`: 30 (number, required)
+ `package_min_qty`: 10 (number, required)

## Medications
### `Innm_Request`
+ `sctid`: `52574003` (string, optional) - innm CNOMED code
+ `name`: `Аміодарон` (string, required) - innm local name
+ `name_original`: `Amiodarone` (string, required) - innm original name

### `Innm`
+ `sctid`: `52574003` (string, required) - innm CNOMED code
+ `name`: `Аміодарон` (string, required) - innm local name
+ `name_original`: `Amiodarone` (string, required) - innm original name

### `Innm_Public_Response_Short`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ include `Innm`

### `Innm_Response_Short`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ include `Innm`
+ is_active: true (boolean, required)

### `Innm_Response`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ include `Innm`
+ is_active: true (boolean, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Dosage_drug`
+ `numerator_unit`: MG (string, required) - `Dictionary MEDICATION_UNIT`
+ `numerator_value`: 200 (number, required)
+ `denumerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `denumerator_value`: 1 (number, required)

### `Dosage_container`
+ `numerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `numerator_value`: 1 (number, required)
+ `denumerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `denumerator_value`: 1 (number, required)

### `Innm_Dosage_for_Medication_request`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `dosage` (`Dosage_drug`, required)
+ `container` (`Dosage_container`, required)
+ `request_qty`: 10 (number, required)

### `Innm_Dosage_for_Medication_request_Responce`
+ `medication_id` : `4a63b858-c138-4921-9341-ae9e384bcbd6` (string, required) - `Identifier medication with type **INNM_DOSAGE**`
+ `medication_name`: `Аміодарон 200мг таблетки` (string, required) - `Name of medication with type **INNM_DOSAGE**`
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `dosage` (`Dosage_drug`, required) - Dosage of innm_dosage object
+ `medication_qty`: 10 (number, required) - Medication quantity isuued by the doctor

### `Manufacturer`
+ `name` : `ПАТ "Київський вітамінний завод"` (string, required) 
+ `country` : `UA` (string, required) - `Dictionary COUNTRY`

### `Ingredient_request`
+ `id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required)
+ `dosage` (`Dosage_drug`, required)
+ `is_primary` : true (boolean, required) 

### `Ingredient`
+ `id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required)
+ `name` : `Амідарон` (string, required)
+ `dosage` (`Dosage_drug`, required)
+ `is_primary` : true (boolean, required) 

### `INNM_Dosage_Request`
+ `name` : `Амідарон` (string, required)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient_request`

### `INNM_Dosage_Response_Short`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required) 
+ include `INNM_Dosage_Response`
+ `is_active` : true (boolean, required)

### `INNM_Dosage_Response`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required) 
+ `name` : `Амідарон` (string, required)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient`
+ `is_active` : true (boolean, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Request`
+ `name` : `Амідарон` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `code_atc`: `C01BD01` (string, optional)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, required)
+ `package_qty`: 30 (number, optional)
+ `package_min_qty`: 10 (number, optional)
+ `certificate` : `UA/4514/01/01` (string, optional)
+ `certificate_expired_at` : `2021-02-09` (string, optional)
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient_request`

### `Medication_Response`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required) 
+ `name` : `Амідарон` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `code_atc`: `C01BD01` (string, optional)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, required)
+ `package_qty`: 30 (number, optional)
+ `package_min_qty`: 10 (number, optional)
+ `certificate` : `UA/4514/01/01` (string, optional)
+ `certificate_expired_at` : `2021-02-09` (string, optional)
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient`
+ `is_active` : true (boolean, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Response_Short`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required) 
+ include `Medication_Response`
+ `is_active` : true (boolean, required)

### `Medication_Short`
+ `name` : `Амідарон` (string, required)
+ `type`: `MEDICATION` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, required)

### `Medical_Program_Response`
+ `id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program Identifier`
+ `name`: `program 'DOSTUPNI LIKI'` (string, required) - `Medical program name`


### `Program_medications_Request`
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medical_program_id`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required) -  Medical program Identifier
+ `reimbursement` (object, required)
    + include `Reimbursement`

### `Program_medications_Update_Request`
+ `is_active`: true (boolean, optional)
+ `medication_request_allowed`: true (boolean, optional)
+ `reimbursement` (object, optional)
    + include `Reimbursement`

### `Reimbursement`
+ `type`: `fixed` (string, required) - fixed or external type of reimbursement (Dictionary REIMBURSEMENT_TYPE)
+ `reimbursement_amount`: 450 (number, optional) - Amount to reimburse for medication package by medical_program

### `Program_medications_Response`
+ `id` : `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) 
+ `medication` (`Medication_Response_Short`, required)
+ `medical_program` (`Medical_Program_Response`, required)
+ `medication_request_allowed`: true (boolean, required) - indicator whether medication is allowed to use in new medication request
+ `reimbursement` (object, required)
    + include `Reimbursement`
+ `is_active` : true (boolean, required) - flag for activation/deactiovation
+ include `System_Logging`

### `Program_medications_List`
+ `id` : `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `medical_program_id`: `042a3b20-bb08-4e50-83ee-ef23c3b1c0c8` (string, required) - medical program identifier
+ `medical_program_name`: `Доступні ліки` (string, required) - medical program name
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medication_name`: `Аритміл` (string, required) - Medication name
+ `form` :  PILL (string, optional) - `Dictionary MEDICATION_FORM`
+ `manufacturer` (`Manufacturer`, optional)
+ `innm_id`: `5052fcaf-58a0-461b-9e98-d60243a1773e` (string, required) - INNM Identifier
+ `innm_name`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - INNM name
+ `reimbursement_amount`: 15 (number, optional) - Amount to reimburse for one medication_unit by medical_program

### `Program_medications_ID`
+ `id` : `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - program_medications_id
+ `innm` (object, required)
    + `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - innm id
    + `name`: `Аміодарон` (string, required) - innm name
    + `form`: PILL (string, required) - `Dictionary MEDICATION_FORM` - innm form
    + `ingredients` (array, required)
        + (object)
            + include (`Dosage_drug`, required) - substances dosage in innm
            + `substance_name`: `Аміодарон` (string, optional) - substance name
            + `is_primary` : true (boolean, required) 
+ `medications` (object, required)
    + `medication_id` : `4a63b858-c138-4921-9341-ae9e384bcbd6` (string, required)
    + `name`: `Аміодарон 5мг` (string, required) - medication name 
    + `form`: PILL (string, required) - `Dictionary MEDICATION_FORM` - medication form
    + `manufacturer` (`Manufacturer`, optional) 
    + `ingredients` (array, required)
        + (object)
            + include (`Dosage_drug`, required) - innm dosage in medication
            + `innm_name`: `Аміодарон`(string, required) 
            + `is_primary` : true (boolean, required) 
+ `medical_program` (`Medical_Program_Response`, required)
+ `reimbursement` (`Reimbursement`, required)
+ `is_active` : true (boolean, required) - flag for activation/deactiovation
+ `medication_request_allowed`: true (boolean, required) - flag whether medications are allowed to be dispensed by the program

### `Black_list_user_Request`
+ `tax_id`: `3126509816` (string, required) - tax_id by party_id 

### `Black_list_user_Response`
+ `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - black list user id
+ `tax_id`: `3126509816` (string, required) - tax_id by party_id
+ `is_active`: true (boolean, required) - flag for activation/deactiovation
+  `parties` (array[`Person_Short_BlackList`], required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Party_user_Response`
+ `id`: `585044f5-1272-4bca-8d41-8440eefe7d26` (string, required) - Person identifier
+ `user_id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional) - user Identifier
+ `party_id`: `79a91507-d409-49fc-b373-934b59c4f694` (string, optional) - Party Identifier
+ `first_name`: `Петро` (string, required)
+ `last_name`: `Іванов` (string, required)
+ `second_name`: `Миколайович` (string, optional)
+ `birth_date`: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `Person_Short_BlackList`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `first_name`: Петро (string, required)
+ `last_name`: Іванов (string, required)
+ `second_name`: Миколайович (string, optional)
+ `birth_date`: `1991-08-19` (string, required) - ISO Datetime.

## `Medication request Request`
### `Medication_request_Request_post_data`
+ `person_id`: `585044f5-1272-4bca-8d41-8440eefe7d26` (string, required) - Person identifier
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
+ `division_id`: `881d6dee-dd3d-43f3-8983-922354c0e6ce` (string, required) - Division identifier where issued Medication Request.
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `medication_id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required) - `Medication (type INNM_DOSAGE) identifier`
+ `medication_qty`: 10 (number, required) - Medication quantity isuued by the doctor
+ `medical_program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string) - `Medical program Identifier`

### `Medication_request_Request_Qualify_post_data`
+ `person_id`: `585044f5-1272-4bca-8d41-8440eefe7d26` (string, required) - Person identifier
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
+ `division_id`: `881d6dee-dd3d-43f3-8983-922354c0e6ce` (string, required) - Division identifier where issued Medication Request.
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `medication_id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required) - Medication identified
+ `medication_qty`: 10 (number, required) - Medication quantity isuued by the doctor

### `Medication_request_Request_Public_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request request identifier
+ `status`: `NEW` (string, required) - Medication Request status. Find available **statuses** on State Charts wiki page
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (Employee_Minimal, required)
+ `person` (`Person_Medication_Request`)            
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response`, required)

### `Qualify_Medication_request_Request_List_program_post_data`
+ `id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string,required) - `Medical program Identifier`

### `Qualify_Medication_request_Request_Responce`
+ `program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program Identifier`
+ `program_name` : `Програма "Доступні ліки"`(string, required)
+ `status` : `INVALID` (enum, required) - Status for ability use program for this Medication request Request
    - VALID
    - INVALID
+ `rejection_reason` : ` Innm not on the list of approved innms for program 'DOSTUPNI LIKI' !` (string) - Reason to fetch invalid status

### `Program_medications_for_Qualify`
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medication_name`: `Амлодипін-КВ ` (string, required) - Medication name
+ `form` :  PILL (string, optional) - `Dictionary MEDICATION_FORM`
+ `manufacturer` (`Manufacturer`, optional)
+ `innm_id`: `5052fcaf-58a0-461b-9e98-d60243a1773e` (string, required) - INNM Identifier
+ `innm_name`: `Амлодипін` (string, required) - INNM name
+ `reimbursement_amount`: 15 (number, optional) - Amount to reimburse for one medication_unit by medical_program

### `Qualify_by_ID_Request_for_Medication_request_Responce`
+ include `Qualify_Medication_request_Request_Responce`
+ `participants` (array, required)
    + (object)
        + include `Program_medications_for_Qualify`

## `medical_programs`
### `medical_programs_request`
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level

### `medical_programs_response`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `is_active`: `true` (boolean, required) - Is medical program active or not. True - Active; False - Inactive
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `medical_programs_list`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `is_active`: `true` (boolean, required) - Is medical program active or not. True - Active; False - Inactive

## `Medication request`
### `Medication_request_Public_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (Employee_Minimal, required)
+ `person` (`Person_Medication_Request`)            
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response`, required)

### `Medication_request_Reject_Public_Response`
+ `rejected_at`: `2017-04-20T19:14:13Z` (string, required) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - Rejected user identifier
+ `reject_reason` : `Помилка призначення. Несумісні препарати.` (string, required) - Medication request reject reason 


## `Medication Dispense`
### `Medication_Dispense_Request`
+ `medication_request_id`: `f08ba3a3-157a-4adc-b65d-737f24f3a1f4` (string, required) - Key for the Medication request 
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense 
+ `division_id`: `2fc70f30-08dc-493c-8d08-925905d7b1e8` (string, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program_id`: `6ee844fd-9f4d-4457-9eda-22aa506be4c4` (string, required) - Active medical program within which medications are going to be provided
+ `details` (array, fixed, required)
    + (object)
        + include `Medication_Dispense_Detail_Request`

### `Medication_Dispense_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (`Medication_request_Public_Response`, required) - Medication request 
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense 
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response`, required) - Active medical program within which medications are going to be provided
+ `details` (array, fixed, required)
    + (object)
        + include `Medication_Dispense_Detail_Response`
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Detail_Request`
+ `medication_id`: `787b6ef1-1d3a-4129-849c-87716c9a2130` (string, required) - Identifier of brand medications 
+ `medication_qty`: 10 (number, required) - qnty of medication_unit (pill/ampoule/container/bottle/vial/aerosol) which provides to the patient
+ `sell_price`: 18.65 (number, required) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
+ `sell_amount`: 186.5 (number, required) - total pharmacy's price for the requested medication quantity
+ `discount_amount`: 150 (number, required) - pharmacy's expected price of dicsount for the requested medication quantity

### `Medication_Dispense_Detail_Response`
+ `medication` (`Medication_Short`, required) - Identifier of brand medications 
+ `medication_qty`: 10 (number, required) - qnty of medication_unit (pill/ampoule/container/bottle/vial/aerosol) which provides to the patient
+ `sell_price`: 18.65 (number, required) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
+ `sell_amount`: 186.5 (number, required) - total pharmacy's price for the requested medication quantity
+ `discount_amount`: 150 (number, required) - pharmacy's expected price of dicsount for the requested medication quantity
+ `reimbursement_amount`: 450 (number, required) - Amount to reimburse for medication package by medical_program

## `Reimbursement_Report`
### `Reimbursement_Report_Response`
+ `medication_request` (object, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
    + `request_number`: `0000-243P-1X53-EH38` (string) - Public medication request human readable number
    + `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
    + `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
    + `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
    + `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
    + `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
    + `status`: `NEW` (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
    +  include (`Medication_request_Reject_Public_Response`, optional)
    + `person_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier
    + `legal_entity` (object, required)
        + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Legal entity identifier
        + `name`: `Клініка Борис` (string, required)
        + `edrpou`: `5432345432` (string, required)
    + `division` (object, required) 
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
        + `name`: `Бориспільське відділення Клініки Борис` (string, required)
        + `mountain_group`: `false` (boolean, optional)
        + `address` (`Address`, required)
    + `employee` (object, required) 
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
        + `party_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee Party id
        + `last_name`: `Іванов` (string, required)
        + `first_name`: `Петро` (string, required)
        + `second_name`: `Миколайович` (string, optional)
        + `position`: `P6` (string, required) - `Dictionary POSITION`
        + `employee_type`: `DOCTOR` (string) - `Dictionary: EMPLOYEE_TYPE`
    + `innm_dosage` (object, required)
        + `id`: `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required)
        + `name`: `Амідарон` (string, required)
        + `form`:  PILL (string, required) - `Dictionary MEDICATION_FORM`
        + `medication_qty`:10 (number, required) - qnty of INNM_DOSAGE
    + `medical_program` (`Medical_Program_Response`, required)
+ `medication_dispense`(object, optional)
    + `id`: `f08ba3a3-157a-4adc-b65d-737f24f3a1f4` (string, optional) - Medication dispense Identifier
    + `dispensed_at`: `2017-08-17` (string, optional) - date of dispense
    + `status`: NEW (string, optional) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
    + `medications` (array, fixed, optional)
        + (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Identifier of brand medications
            + `code_atc`: `С01BD01` (string, optional)
            + include `Medication_Short`
            + `package_qty`: 30 (number, required) - qnty medications in the package
            + `details` (object, required)
                + `medication_qty`: 10 (number, required) - qnty of medication_unit (pill/ampoule/container/bottle/vial/aerosol) which provides to the patient
                + `sell_price`: 18.65 (number, required) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
                + `sell_amount`: 186.5 (number, required) - total pharmacy's price for the requested medication quantity
                + `discount_amount`: 150 (number, required) - pharmacy's expected price of dicsount for the requested medication quantity
                + `reimbursement_amount`: 450 (number, required) - Amount to reimburse for medication package by medical_program
    + `medical_program` (`Medical_Program_Response`, optional)
    + `legal_entity` (object, optional)
        + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Legal entity identifier
        + `name`: `Аптека Доброго дня` (string, required) - Legal entity name
        + `edrpou`: `5432345431` (string, required) - Legal entity edrpou
    + `division` (object, optional) 
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
        + `name`: `Бориспільське відділення Аптеки Доброго Дня` (string, required)
        + `mountain_group`: `false` (boolean, optional)
        + `address` (`Address`, required)
    + `party` (object, optional) 
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee Party id
        + `last_name`: `Іванов` (string, required)
        + `first_name`: `Петро` (string, required)
        + `second_name`: `Миколайович` (string, optional)

## Roles
### Role (object)
+ name: `Doctor` (string, required) - role title
+ scope: `notebooks:read notebooks:create patients:read` (string, required) - List of scopes, space-separated.

### `Role_Response` (Role)
+ id: `role-1380df72-275a-11e7-93ae-92361f002671` (string) - Internal role ID, a UUID string.
+ `created_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

## Clients
### Client (object)
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - Unique client id
+ name: `Аптека 199` (string, required) - Client name
+ secret: `ZlFOaHBTR0d3Q0hQcDEraHVYdXBVZz09` (string, required)
+ redirect_uri: `http://example2.com` (string, required)
+ settings (object)
+ priv_settings (object)
